<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManheimEventApi.Fakes</name>
    </assembly>
    <members>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute">
            <summary>Shim type of ManheimEventApi.Attributes.HttpAuthorizeAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.#ctor(ManheimEventApi.Attributes.HttpAuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.AllInstances.HandleUnauthorizedRequestHttpActionContext">
            <summary>Sets the shim of HttpAuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.AllInstances.IsAuthHeaderValidAuthenticationHeaderValue">
            <summary>Sets the shim of HttpAuthorizeAttribute.IsAuthHeaderValid(AuthenticationHeaderValue authHeader)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.AllInstances.OnAuthorizationHttpActionContext">
            <summary>Sets the shim of HttpAuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.Bind(System.Web.Http.Filters.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.ConstructorIConfigurationUtility">
            <summary>Sets the shim of HttpAuthorizeAttribute.HttpAuthorizeAttribute(IConfigurationUtility configUtility)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.HandleUnauthorizedRequestHttpActionContext">
            <summary>Sets the shim of HttpAuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.IsAuthHeaderValidAuthenticationHeaderValue">
            <summary>Sets the shim of HttpAuthorizeAttribute.IsAuthHeaderValid(AuthenticationHeaderValue authHeader)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpAuthorizeAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the shim of HttpAuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute">
            <summary>Shim type of ManheimEventApi.Attributes.HttpExceptionAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.#ctor(ManheimEventApi.Attributes.HttpExceptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.AllInstances.OnExceptionHttpActionExecutedContext">
            <summary>Sets the shim of HttpExceptionAttribute.OnException(HttpActionExecutedContext context)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.Bind(System.Web.Http.Filters.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.Constructor">
            <summary>Sets the shim of HttpExceptionAttribute.HttpExceptionAttribute()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimHttpExceptionAttribute.OnExceptionHttpActionExecutedContext">
            <summary>Sets the shim of HttpExceptionAttribute.OnException(HttpActionExecutedContext context)</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute">
            <summary>Shim type of ManheimEventApi.Attributes.RequireHttpsAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.#ctor(ManheimEventApi.Attributes.RequireHttpsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.AllInstances.OnAuthorizationHttpActionContext">
            <summary>Sets the shim of RequireHttpsAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.Bind(System.Web.Http.Filters.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.Constructor">
            <summary>Sets the shim of RequireHttpsAttribute.RequireHttpsAttribute()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimRequireHttpsAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the shim of RequireHttpsAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute">
            <summary>Shim type of ManheimEventApi.Attributes.ValidateModelAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.#ctor(ManheimEventApi.Attributes.ValidateModelAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.AllInstances.OnActionExecutingHttpActionContext">
            <summary>Sets the shim of ValidateModelAttribute.OnActionExecuting(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.Bind(System.Web.Http.Filters.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.Constructor">
            <summary>Sets the shim of ValidateModelAttribute.ValidateModelAttribute()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.ShimValidateModelAttribute.OnActionExecutingHttpActionContext">
            <summary>Sets the shim of ValidateModelAttribute.OnActionExecuting(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute">
            <summary>Stub type of ManheimEventApi.Attributes.HttpAuthorizeAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.#ctor(ManheimEventApi.Utilities.IConfigurationUtility)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of HttpAuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.HandleUnauthorizedRequestHttpActionContext">
            <summary>Sets the stub of HttpAuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubHttpAuthorizeAttribute</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of AuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.IsAuthorizedHttpActionContext">
            <summary>Sets the stub of AuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of HttpAuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of AuthorizationFilterAttribute.OnAuthorizationAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.OnAuthorizationAsyncHttpActionContextCancellationToken">
            <summary>Sets the stub of AuthorizationFilterAttribute.OnAuthorizationAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the stub of HttpAuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.TypeId">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute">
            <summary>Stub type of ManheimEventApi.Attributes.HttpExceptionAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubHttpExceptionAttribute</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>Sets the stub of HttpExceptionAttribute.OnException(HttpActionExecutedContext context)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.OnExceptionAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of ExceptionFilterAttribute.OnExceptionAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.OnExceptionAsyncHttpActionExecutedContextCancellationToken">
            <summary>Sets the stub of ExceptionFilterAttribute.OnExceptionAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.OnExceptionHttpActionExecutedContext">
            <summary>Sets the stub of HttpExceptionAttribute.OnException(HttpActionExecutedContext context)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubHttpExceptionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute">
            <summary>Stub type of ManheimEventApi.Attributes.RequireHttpsAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequireHttpsAttribute</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of RequireHttpsAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of AuthorizationFilterAttribute.OnAuthorizationAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.OnAuthorizationAsyncHttpActionContextCancellationToken">
            <summary>Sets the stub of AuthorizationFilterAttribute.OnAuthorizationAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the stub of RequireHttpsAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubRequireHttpsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute">
            <summary>Stub type of ManheimEventApi.Attributes.ValidateModelAttribute</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValidateModelAttribute</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(HttpActionExecutedContext actionExecutedContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutedAsyncHttpActionExecutedContextCancellationToken">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutedHttpActionExecutedContext">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(HttpActionExecutedContext actionExecutedContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of ValidateModelAttribute.OnActionExecuting(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecutingAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutingAsyncHttpActionContextCancellationToken">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecutingAsync(HttpActionContext actionContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.OnActionExecutingHttpActionContext">
            <summary>Sets the stub of ValidateModelAttribute.OnActionExecuting(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:ManheimEventApi.Attributes.Fakes.StubValidateModelAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.ShimAuctionController">
            <summary>Shim type of ManheimEventApi.Controllers.AuctionController</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.#ctor(ManheimEventApi.Controllers.AuctionController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.ShimAuctionController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimAuctionController.AllInstances.OfferingOfferingEvent">
            <summary>Sets the shim of AuctionController.Offering(OfferingEvent newEvent)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimAuctionController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.Bind(System.Web.Http.Controllers.IHttpController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimAuctionController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimAuctionController.ConstructorIAuctionProcessor">
            <summary>Sets the shim of AuctionController.AuctionController(IAuctionProcessor auctionProcessor)</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimAuctionController.OfferingOfferingEvent">
            <summary>Sets the shim of AuctionController.Offering(OfferingEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.ShimInventoryController">
            <summary>Shim type of ManheimEventApi.Controllers.InventoryController</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.#ctor(ManheimEventApi.Controllers.InventoryController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.ShimInventoryController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimInventoryController.AllInstances.UnitUnitEvent">
            <summary>Sets the shim of InventoryController.Unit(UnitEvent newEvent)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimInventoryController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.Bind(System.Web.Http.Controllers.IHttpController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.ShimInventoryController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimInventoryController.ConstructorIInventoryProcessor">
            <summary>Sets the shim of InventoryController.InventoryController(IInventoryProcessor inventoryProcessor)</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.ShimInventoryController.UnitUnitEvent">
            <summary>Sets the shim of InventoryController.Unit(UnitEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.StubAuctionController">
            <summary>Stub type of ManheimEventApi.Controllers.AuctionController</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.#ctor(ManheimEventApi.Processors.IAuctionProcessor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequest(System.String)">
            <summary>Sets the stub of ApiController.BadRequest(String message)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequest">
            <summary>Sets the stub of ApiController.BadRequest()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <summary>Sets the stub of ApiController.BadRequest(ModelStateDictionary modelState)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequest01">
            <summary>Sets the stub of ApiController.BadRequest()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequestModelStateDictionary">
            <summary>Sets the stub of ApiController.BadRequest(ModelStateDictionary modelState)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.BadRequestString">
            <summary>Sets the stub of ApiController.BadRequest(String message)</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubAuctionController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Conflict">
            <summary>Sets the stub of ApiController.Conflict()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.Conflict01">
            <summary>Sets the stub of ApiController.Conflict()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Sets the stub of ApiController.Content(HttpStatusCode statusCode, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Content``1(System.Net.HttpStatusCode,``0)">
            <summary>Sets the stub of ApiController.Content(HttpStatusCode statusCode, !!0 value)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.ContentOf1HttpStatusCodeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.HttpStatusCode,``0,System.Web.Http.Results.NegotiatedContentResult{``0}})">
            <summary>Sets stubs of Content(HttpStatusCode statusCode, !!0 value)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.ContentOf1HttpStatusCodeM0MediaTypeFormatterMediaTypeHeaderValue``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.Results.FormattedContentResult{``0}})">
            <summary>Sets stubs of Content(HttpStatusCode statusCode, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Created``1(System.Uri,``0)">
            <summary>Sets the stub of ApiController.Created(Uri location, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <summary>Sets the stub of ApiController.CreatedAtRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.CreatedAtRouteOf1StringIDictionaryOfStringObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0,System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult{``0}})">
            <summary>Sets stubs of CreatedAtRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.CreatedOf1UriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,``0,System.Web.Http.Results.CreatedNegotiatedContentResult{``0}})">
            <summary>Sets stubs of Created(Uri location, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Dispose(System.Boolean)">
            <summary>Sets the stub of ApiController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.DisposeBoolean">
            <summary>Sets the stub of ApiController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of ApiController.ExecuteAsync(HttpControllerContext controllerContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.ExecuteAsyncHttpControllerContextCancellationToken">
            <summary>Sets the stub of ApiController.ExecuteAsync(HttpControllerContext controllerContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>Sets the stub of ApiController.Initialize(HttpControllerContext controllerContext)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.InitializeHttpControllerContext">
            <summary>Sets the stub of ApiController.Initialize(HttpControllerContext controllerContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.InitializeStub">
            <summary>Initializes a new instance of type StubAuctionController</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubAuctionController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubAuctionController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.InternalServerError(System.Exception)">
            <summary>Sets the stub of ApiController.InternalServerError(Exception exception)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.InternalServerError">
            <summary>Sets the stub of ApiController.InternalServerError()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.InternalServerError01">
            <summary>Sets the stub of ApiController.InternalServerError()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.InternalServerErrorException">
            <summary>Sets the stub of ApiController.InternalServerError(Exception exception)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.NotFound">
            <summary>Sets the stub of ApiController.NotFound()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.NotFound01">
            <summary>Sets the stub of ApiController.NotFound()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Ok">
            <summary>Sets the stub of ApiController.Ok()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Ok``1(``0)">
            <summary>Sets the stub of ApiController.Ok(!!0 content)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.Ok01">
            <summary>Sets the stub of ApiController.Ok()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.OkOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Web.Http.Results.OkNegotiatedContentResult{``0}})">
            <summary>Sets stubs of Ok(!!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Redirect(System.Uri)">
            <summary>Sets the stub of ApiController.Redirect(Uri location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Redirect(System.String)">
            <summary>Sets the stub of ApiController.Redirect(String location)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.RedirectString">
            <summary>Sets the stub of ApiController.Redirect(String location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ApiController.RedirectToRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.RedirectToRouteStringIDictionaryOfStringObject">
            <summary>Sets the stub of ApiController.RedirectToRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.RedirectUri">
            <summary>Sets the stub of ApiController.Redirect(Uri location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
            <summary>Sets the stub of ApiController.ResponseMessage(HttpResponseMessage response)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.ResponseMessageHttpResponseMessage">
            <summary>Sets the stub of ApiController.ResponseMessage(HttpResponseMessage response)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.StatusCode(System.Net.HttpStatusCode)">
            <summary>Sets the stub of ApiController.StatusCode(HttpStatusCode status)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.StatusCodeHttpStatusCode">
            <summary>Sets the stub of ApiController.StatusCode(HttpStatusCode status)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubAuctionController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <summary>Sets the stub of ApiController.Unauthorized(IEnumerable`1&lt;AuthenticationHeaderValue&gt; challenges)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubAuctionController.UnauthorizedIEnumerableOfAuthenticationHeaderValue">
            <summary>Sets the stub of ApiController.Unauthorized(IEnumerable`1&lt;AuthenticationHeaderValue&gt; challenges)</summary>
        </member>
        <member name="T:ManheimEventApi.Controllers.Fakes.StubInventoryController">
            <summary>Stub type of ManheimEventApi.Controllers.InventoryController</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.#ctor(ManheimEventApi.Processors.IInventoryProcessor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequest(System.String)">
            <summary>Sets the stub of ApiController.BadRequest(String message)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequest">
            <summary>Sets the stub of ApiController.BadRequest()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <summary>Sets the stub of ApiController.BadRequest(ModelStateDictionary modelState)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequest01">
            <summary>Sets the stub of ApiController.BadRequest()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequestModelStateDictionary">
            <summary>Sets the stub of ApiController.BadRequest(ModelStateDictionary modelState)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.BadRequestString">
            <summary>Sets the stub of ApiController.BadRequest(String message)</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubInventoryController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Conflict">
            <summary>Sets the stub of ApiController.Conflict()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.Conflict01">
            <summary>Sets the stub of ApiController.Conflict()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Sets the stub of ApiController.Content(HttpStatusCode statusCode, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Content``1(System.Net.HttpStatusCode,``0)">
            <summary>Sets the stub of ApiController.Content(HttpStatusCode statusCode, !!0 value)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.ContentOf1HttpStatusCodeM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.HttpStatusCode,``0,System.Web.Http.Results.NegotiatedContentResult{``0}})">
            <summary>Sets stubs of Content(HttpStatusCode statusCode, !!0 value)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.ContentOf1HttpStatusCodeM0MediaTypeFormatterMediaTypeHeaderValue``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.Results.FormattedContentResult{``0}})">
            <summary>Sets stubs of Content(HttpStatusCode statusCode, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Created``1(System.Uri,``0)">
            <summary>Sets the stub of ApiController.Created(Uri location, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <summary>Sets the stub of ApiController.CreatedAtRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.CreatedAtRouteOf1StringIDictionaryOfStringObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0,System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult{``0}})">
            <summary>Sets stubs of CreatedAtRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.CreatedOf1UriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,``0,System.Web.Http.Results.CreatedNegotiatedContentResult{``0}})">
            <summary>Sets stubs of Created(Uri location, !!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Dispose(System.Boolean)">
            <summary>Sets the stub of ApiController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.DisposeBoolean">
            <summary>Sets the stub of ApiController.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
            <summary>Sets the stub of ApiController.ExecuteAsync(HttpControllerContext controllerContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.ExecuteAsyncHttpControllerContextCancellationToken">
            <summary>Sets the stub of ApiController.ExecuteAsync(HttpControllerContext controllerContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>Sets the stub of ApiController.Initialize(HttpControllerContext controllerContext)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.InitializeHttpControllerContext">
            <summary>Sets the stub of ApiController.Initialize(HttpControllerContext controllerContext)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.InitializeStub">
            <summary>Initializes a new instance of type StubInventoryController</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubInventoryController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Controllers.Fakes.StubInventoryController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.InternalServerError(System.Exception)">
            <summary>Sets the stub of ApiController.InternalServerError(Exception exception)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.InternalServerError">
            <summary>Sets the stub of ApiController.InternalServerError()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.InternalServerError01">
            <summary>Sets the stub of ApiController.InternalServerError()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.InternalServerErrorException">
            <summary>Sets the stub of ApiController.InternalServerError(Exception exception)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.NotFound">
            <summary>Sets the stub of ApiController.NotFound()</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.NotFound01">
            <summary>Sets the stub of ApiController.NotFound()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Ok">
            <summary>Sets the stub of ApiController.Ok()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Ok``1(``0)">
            <summary>Sets the stub of ApiController.Ok(!!0 content)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.Ok01">
            <summary>Sets the stub of ApiController.Ok()</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.OkOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Web.Http.Results.OkNegotiatedContentResult{``0}})">
            <summary>Sets stubs of Ok(!!0 content)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Redirect(System.Uri)">
            <summary>Sets the stub of ApiController.Redirect(Uri location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Redirect(System.String)">
            <summary>Sets the stub of ApiController.Redirect(String location)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.RedirectString">
            <summary>Sets the stub of ApiController.Redirect(String location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ApiController.RedirectToRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.RedirectToRouteStringIDictionaryOfStringObject">
            <summary>Sets the stub of ApiController.RedirectToRoute(String routeName, IDictionary`2&lt;String,Object&gt; routeValues)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.RedirectUri">
            <summary>Sets the stub of ApiController.Redirect(Uri location)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
            <summary>Sets the stub of ApiController.ResponseMessage(HttpResponseMessage response)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.ResponseMessageHttpResponseMessage">
            <summary>Sets the stub of ApiController.ResponseMessage(HttpResponseMessage response)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.StatusCode(System.Net.HttpStatusCode)">
            <summary>Sets the stub of ApiController.StatusCode(HttpStatusCode status)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.StatusCodeHttpStatusCode">
            <summary>Sets the stub of ApiController.StatusCode(HttpStatusCode status)</summary>
        </member>
        <member name="M:ManheimEventApi.Controllers.Fakes.StubInventoryController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <summary>Sets the stub of ApiController.Unauthorized(IEnumerable`1&lt;AuthenticationHeaderValue&gt; challenges)</summary>
        </member>
        <member name="F:ManheimEventApi.Controllers.Fakes.StubInventoryController.UnauthorizedIEnumerableOfAuthenticationHeaderValue">
            <summary>Sets the stub of ApiController.Unauthorized(IEnumerable`1&lt;AuthenticationHeaderValue&gt; challenges)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimDbContext">
            <summary>Shim type of ManheimEventApi.DataAccess.DbContext</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.#ctor(ManheimEventApi.DataAccess.DbContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.AudioGet">
            <summary>Sets the shim of DbContext.get_Audio()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.AudioSetDbSetOfAudio">
            <summary>Sets the shim of DbContext.set_Audio(DbSet`1&lt;Audio&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.ConditionReportGet">
            <summary>Sets the shim of DbContext.get_ConditionReport()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.ConditionReportSetDbSetOfConditionReport">
            <summary>Sets the shim of DbContext.set_ConditionReport(DbSet`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.ImagesGet">
            <summary>Sets the shim of DbContext.get_Images()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.ImagesSetDbSetOfImages">
            <summary>Sets the shim of DbContext.set_Images(DbSet`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.OfferingGet">
            <summary>Sets the shim of DbContext.get_Offering()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.OfferingSetDbSetOfOffering">
            <summary>Sets the shim of DbContext.set_Offering(DbSet`1&lt;Offering&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.OptionsGet">
            <summary>Sets the shim of DbContext.get_Options()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.OptionsSetDbSetOfOptions">
            <summary>Sets the shim of DbContext.set_Options(DbSet`1&lt;Options&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.PriorPaintGet">
            <summary>Sets the shim of DbContext.get_PriorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.PriorPaintSetDbSetOfPriorPaint">
            <summary>Sets the shim of DbContext.set_PriorPaint(DbSet`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.UnitGet">
            <summary>Sets the shim of DbContext.get_Unit()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AllInstances.UnitSetDbSetOfUnit">
            <summary>Sets the shim of DbContext.set_Unit(DbSet`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AudioGet">
            <summary>Sets the shim of DbContext.get_Audio()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.AudioSetDbSetOfAudio">
            <summary>Sets the shim of DbContext.set_Audio(DbSet`1&lt;Audio&gt; value)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimDbContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.ConditionReportGet">
            <summary>Sets the shim of DbContext.get_ConditionReport()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.ConditionReportSetDbSetOfConditionReport">
            <summary>Sets the shim of DbContext.set_ConditionReport(DbSet`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.Constructor">
            <summary>Sets the shim of DbContext.DbContext()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.ImagesGet">
            <summary>Sets the shim of DbContext.get_Images()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.ImagesSetDbSetOfImages">
            <summary>Sets the shim of DbContext.set_Images(DbSet`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.OfferingGet">
            <summary>Sets the shim of DbContext.get_Offering()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.OfferingSetDbSetOfOffering">
            <summary>Sets the shim of DbContext.set_Offering(DbSet`1&lt;Offering&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.OptionsGet">
            <summary>Sets the shim of DbContext.get_Options()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.OptionsSetDbSetOfOptions">
            <summary>Sets the shim of DbContext.set_Options(DbSet`1&lt;Options&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.PriorPaintGet">
            <summary>Sets the shim of DbContext.get_PriorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.PriorPaintSetDbSetOfPriorPaint">
            <summary>Sets the shim of DbContext.set_PriorPaint(DbSet`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.UnitGet">
            <summary>Sets the shim of DbContext.get_Unit()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimDbContext.UnitSetDbSetOfUnit">
            <summary>Sets the shim of DbContext.set_Unit(DbSet`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1">
            <summary>Shim type of ManheimEventApi.DataAccess.GenericRepository`1</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.#ctor(ManheimEventApi.DataAccess.GenericRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.AddOrUpdateT0">
            <summary>Sets the shim of GenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.AllInstances.AddOrUpdateT0">
            <summary>Sets the shim of GenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.Bind(ManheimEventApi.DataAccess.IGenericRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimGenericRepository`1.ConstructorDbContext">
            <summary>Sets the shim of GenericRepository`1.GenericRepository`1(DbContext dbContext)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork">
            <summary>Shim type of ManheimEventApi.DataAccess.UnitOfWork</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.#ctor(ManheimEventApi.DataAccess.UnitOfWork)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances.Dispose">
            <summary>Sets the shim of UnitOfWork.Dispose()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UnitOfWork.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances.OfferingRepositoryGet">
            <summary>Sets the shim of UnitOfWork.get_OfferingRepository()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances.SaveAsync">
            <summary>Sets the shim of UnitOfWork.SaveAsync()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.AllInstances.UnitRepositoryGet">
            <summary>Sets the shim of UnitOfWork.get_UnitRepository()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.Bind(ManheimEventApi.DataAccess.IUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.Constructor">
            <summary>Sets the shim of UnitOfWork.UnitOfWork()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.Dispose">
            <summary>Sets the shim of UnitOfWork.Dispose()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.DisposeBoolean">
            <summary>Sets the shim of UnitOfWork.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.OfferingRepositoryGet">
            <summary>Sets the shim of UnitOfWork.get_OfferingRepository()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.SaveAsync">
            <summary>Sets the shim of UnitOfWork.SaveAsync()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.ShimUnitOfWork.UnitRepositoryGet">
            <summary>Sets the shim of UnitOfWork.get_UnitRepository()</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.StubDbContext">
            <summary>Stub type of ManheimEventApi.DataAccess.DbContext</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubDbContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbContext</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubDbContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubDbContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of DbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChangesAsync">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChangesAsync01">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.SaveChangesAsyncCancellationToken">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.Set(System.Type)">
            <summary>Sets the stub of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.Set``1">
            <summary>Sets the stub of DbContext.Set()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets stubs of Set()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.SetType">
            <summary>Sets the stub of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubDbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubDbContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1">
            <summary>Stub type of ManheimEventApi.DataAccess.GenericRepository`1</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.#ctor(ManheimEventApi.DataAccess.DbContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.AddOrUpdate(`0)">
            <summary>Sets the stub of GenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.AddOrUpdateT0">
            <summary>Sets the stub of GenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubGenericRepository</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubGenericRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.StubIGenericRepository`1">
            <summary>Stub type of ManheimEventApi.DataAccess.IGenericRepository`1</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubIGenericRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIGenericRepository</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubIGenericRepository`1.AddOrUpdateT0">
            <summary>Sets the stub of IGenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubIGenericRepository`1.ManheimEventApi#DataAccess#IGenericRepository{TEntity}#AddOrUpdate(`0)">
            <summary>Sets the stub of IGenericRepository`1.AddOrUpdate(!0 entityToUpdate)</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork">
            <summary>Stub type of ManheimEventApi.DataAccess.IUnitOfWork</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWork</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.ManheimEventApi#DataAccess#IUnitOfWork#SaveAsync">
            <summary>Sets the stub of IUnitOfWork.SaveAsync()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.ManheimEventApi#DataAccess#IUnitOfWork#OfferingRepository">
            <summary>Sets the stub of IUnitOfWork.get_OfferingRepository()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.OfferingRepositoryGet">
            <summary>Sets the stub of IUnitOfWork.get_OfferingRepository()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.SaveAsync">
            <summary>Sets the stub of IUnitOfWork.SaveAsync()</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.ManheimEventApi#DataAccess#IUnitOfWork#UnitRepository">
            <summary>Sets the stub of IUnitOfWork.get_UnitRepository()</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubIUnitOfWork.UnitRepositoryGet">
            <summary>Sets the stub of IUnitOfWork.get_UnitRepository()</summary>
        </member>
        <member name="T:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork">
            <summary>Stub type of ManheimEventApi.DataAccess.UnitOfWork</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.Dispose(System.Boolean)">
            <summary>Sets the stub of UnitOfWork.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.DisposeBoolean">
            <summary>Sets the stub of UnitOfWork.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWork</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.DataAccess.Fakes.StubUnitOfWork.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance">
            <summary>Shim type of ManheimEventApi.DependencyInjection.ContainerInstance</summary>
        </member>
        <member name="M:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.ContainerGet">
            <summary>Sets the shim of ContainerInstance.get_Container()</summary>
        </member>
        <member name="P:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.RegisterInterfaces">
            <summary>Sets the shim of ContainerInstance.RegisterInterfaces()</summary>
        </member>
        <member name="P:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.RegisterScopedClasses">
            <summary>Sets the shim of ContainerInstance.RegisterScopedClasses()</summary>
        </member>
        <member name="P:ManheimEventApi.DependencyInjection.Fakes.ShimContainerInstance.RegisterWebApiControllers">
            <summary>Sets the shim of ContainerInstance.RegisterWebApiControllers()</summary>
        </member>
        <member name="T:ManheimEventApi.Fakes.ShimWebApiApplication">
            <summary>Shim type of ManheimEventApi.WebApiApplication</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.#ctor(ManheimEventApi.WebApiApplication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Fakes.ShimWebApiApplication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiApplication.AllInstances.Application_Start">
            <summary>Sets the shim of WebApiApplication.Application_Start()</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiApplication.Application_Start">
            <summary>Sets the shim of WebApiApplication.Application_Start()</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiApplication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.Bind(System.Web.IHttpAsyncHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.Bind(System.Web.IHttpHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiApplication.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiApplication.Constructor">
            <summary>Sets the shim of WebApiApplication.WebApiApplication()</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiApplication.RegisterWebApiFiltersHttpFilterCollection">
            <summary>Sets the shim of WebApiApplication.RegisterWebApiFilters(HttpFilterCollection filters)</summary>
        </member>
        <member name="T:ManheimEventApi.Fakes.ShimWebApiConfig">
            <summary>Shim type of ManheimEventApi.WebApiConfig</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.ShimWebApiConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.ShimWebApiConfig.RegisterHttpConfiguration">
            <summary>Sets the shim of WebApiConfig.Register(HttpConfiguration config)</summary>
        </member>
        <member name="T:ManheimEventApi.Fakes.StubWebApiApplication">
            <summary>Stub type of ManheimEventApi.WebApiApplication</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.StubWebApiApplication.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.Dispose">
            <summary>Sets the stub of HttpApplication.Dispose()</summary>
        </member>
        <member name="F:ManheimEventApi.Fakes.StubWebApiApplication.Dispose01">
            <summary>Sets the stub of HttpApplication.Dispose()</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
            <summary>Sets the stub of HttpApplication.GetOutputCacheProviderName(HttpContext context)</summary>
        </member>
        <member name="F:ManheimEventApi.Fakes.StubWebApiApplication.GetOutputCacheProviderNameHttpContext">
            <summary>Sets the stub of HttpApplication.GetOutputCacheProviderName(HttpContext context)</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
            <summary>Sets the stub of HttpApplication.GetVaryByCustomString(HttpContext context, String custom)</summary>
        </member>
        <member name="F:ManheimEventApi.Fakes.StubWebApiApplication.GetVaryByCustomStringHttpContextString">
            <summary>Sets the stub of HttpApplication.GetVaryByCustomString(HttpContext context, String custom)</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.Init">
            <summary>Sets the stub of HttpApplication.Init()</summary>
        </member>
        <member name="F:ManheimEventApi.Fakes.StubWebApiApplication.Init01">
            <summary>Sets the stub of HttpApplication.Init()</summary>
        </member>
        <member name="M:ManheimEventApi.Fakes.StubWebApiApplication.InitializeStub">
            <summary>Initializes a new instance of type StubWebApiApplication</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.StubWebApiApplication.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Fakes.StubWebApiApplication.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Logging.Fakes.ShimLogger">
            <summary>Shim type of ManheimEventApi.Logging.Logger</summary>
        </member>
        <member name="M:ManheimEventApi.Logging.Fakes.ShimLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Logging.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Logging.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.ErrorException">
            <summary>Sets the shim of Logger.Error(Exception ex)</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.ErrorObject">
            <summary>Sets the shim of Logger.Error(Object msg)</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.ErrorObjectException">
            <summary>Sets the shim of Logger.Error(Object msg, Exception ex)</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.InfoObject">
            <summary>Sets the shim of Logger.Info(Object msg)</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.LogGet">
            <summary>Sets the shim of Logger.get_Log()</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.StaticConstructor">
            <summary>Sets the shim of Logger.Logger()</summary>
        </member>
        <member name="P:ManheimEventApi.Logging.Fakes.ShimLogger.WarningObject">
            <summary>Sets the shim of Logger.Warning(Object msg)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOffering">
            <summary>Shim type of ManheimEventApi.Models.Offerings.Offering</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.#ctor(ManheimEventApi.Models.Offerings.Offering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.accountHrefGet">
            <summary>Sets the shim of Offering.get_accountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.accountHrefSetString">
            <summary>Sets the shim of Offering.set_accountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.bidIncrementGet">
            <summary>Sets the shim of Offering.get_bidIncrement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.bidIncrementSetNullableOfInt32">
            <summary>Sets the shim of Offering.set_bidIncrement(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.blueLightGet">
            <summary>Sets the shim of Offering.get_blueLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.blueLightSetString">
            <summary>Sets the shim of Offering.set_blueLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.buyNowPriceGet">
            <summary>Sets the shim of Offering.get_buyNowPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.buyNowPriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_buyNowPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.buyerAccountHrefGet">
            <summary>Sets the shim of Offering.get_buyerAccountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.buyerAccountHrefSetString">
            <summary>Sets the shim of Offering.set_buyerAccountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.channelGet">
            <summary>Sets the shim of Offering.get_channel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.channelSetString">
            <summary>Sets the shim of Offering.set_channel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.consignmentHrefGet">
            <summary>Sets the shim of Offering.get_consignmentHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.consignmentHrefSetString">
            <summary>Sets the shim of Offering.set_consignmentHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.createdOnGet">
            <summary>Sets the shim of Offering.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.createdOnSetString">
            <summary>Sets the shim of Offering.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.currencyGet">
            <summary>Sets the shim of Offering.get_currency()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.currencySetString">
            <summary>Sets the shim of Offering.set_currency(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.customerHrefGet">
            <summary>Sets the shim of Offering.get_customerHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.customerHrefSetString">
            <summary>Sets the shim of Offering.set_customerHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.customerIDGet">
            <summary>Sets the shim of Offering.get_customerID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.customerIDSetString">
            <summary>Sets the shim of Offering.set_customerID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.dateGet">
            <summary>Sets the shim of Offering.get_date()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.dateSetDateTime">
            <summary>Sets the shim of Offering.set_date(DateTime value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.eventTypeGet">
            <summary>Sets the shim of Offering.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.eventTypeSetString">
            <summary>Sets the shim of Offering.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.facilitatingLocationHrefGet">
            <summary>Sets the shim of Offering.get_facilitatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.facilitatingLocationHrefSetString">
            <summary>Sets the shim of Offering.set_facilitatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.floorPriceGet">
            <summary>Sets the shim of Offering.get_floorPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.floorPriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_floorPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.greenLightGet">
            <summary>Sets the shim of Offering.get_greenLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.greenLightSetString">
            <summary>Sets the shim of Offering.set_greenLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.hrefGet">
            <summary>Sets the shim of Offering.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.hrefSetString">
            <summary>Sets the shim of Offering.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.laneNumberGet">
            <summary>Sets the shim of Offering.get_laneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.laneNumberSetString">
            <summary>Sets the shim of Offering.set_laneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingEndDateGet">
            <summary>Sets the shim of Offering.get_listingEndDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingEndDateSetString">
            <summary>Sets the shim of Offering.set_listingEndDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingStartDateGet">
            <summary>Sets the shim of Offering.get_listingStartDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingStartDateSetString">
            <summary>Sets the shim of Offering.set_listingStartDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingTypeGet">
            <summary>Sets the shim of Offering.get_listingType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.listingTypeSetString">
            <summary>Sets the shim of Offering.set_listingType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.manheimAccountNumberGet">
            <summary>Sets the shim of Offering.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.manheimAccountNumberSetString">
            <summary>Sets the shim of Offering.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.notesHrefGet">
            <summary>Sets the shim of Offering.get_notesHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.notesHrefSetString">
            <summary>Sets the shim of Offering.set_notesHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.offeringIDGet">
            <summary>Sets the shim of Offering.get_offeringID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.offeringIDSetString">
            <summary>Sets the shim of Offering.set_offeringID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.oveListingIdGet">
            <summary>Sets the shim of Offering.get_oveListingId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.oveListingIdSetString">
            <summary>Sets the shim of Offering.set_oveListingId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.physicalLaneNumberGet">
            <summary>Sets the shim of Offering.get_physicalLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.physicalLaneNumberSetString">
            <summary>Sets the shim of Offering.set_physicalLaneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.redLightGet">
            <summary>Sets the shim of Offering.get_redLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.redLightSetString">
            <summary>Sets the shim of Offering.set_redLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.registrationDateGet">
            <summary>Sets the shim of Offering.get_registrationDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.registrationDateSetString">
            <summary>Sets the shim of Offering.set_registrationDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.resourceGet">
            <summary>Sets the shim of Offering.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.resourceSetString">
            <summary>Sets the shim of Offering.set_resource(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.runNumberGet">
            <summary>Sets the shim of Offering.get_runNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.runNumberSetString">
            <summary>Sets the shim of Offering.set_runNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleLocationHrefGet">
            <summary>Sets the shim of Offering.get_saleLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleLocationHrefSetString">
            <summary>Sets the shim of Offering.set_saleLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleNumberGet">
            <summary>Sets the shim of Offering.get_saleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleNumberSetNullableOfInt32">
            <summary>Sets the shim of Offering.set_saleNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.salePriceGet">
            <summary>Sets the shim of Offering.get_salePrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.salePriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_salePrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleTypeGet">
            <summary>Sets the shim of Offering.get_saleType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleTypeSetString">
            <summary>Sets the shim of Offering.set_saleType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleYearGet">
            <summary>Sets the shim of Offering.get_saleYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.saleYearSetString">
            <summary>Sets the shim of Offering.set_saleYear(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.statusGet">
            <summary>Sets the shim of Offering.get_status()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.statusSetString">
            <summary>Sets the shim of Offering.set_status(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.unitHrefGet">
            <summary>Sets the shim of Offering.get_unitHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.unitHrefSetString">
            <summary>Sets the shim of Offering.set_unitHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.unitSnapshotsCompletedGet">
            <summary>Sets the shim of Offering.get_unitSnapshotsCompleted()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.unitSnapshotsCompletedSetString">
            <summary>Sets the shim of Offering.set_unitSnapshotsCompleted(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.updatedOnGet">
            <summary>Sets the shim of Offering.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.updatedOnSetString">
            <summary>Sets the shim of Offering.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.virtualLaneNumberGet">
            <summary>Sets the shim of Offering.get_virtualLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.virtualLaneNumberSetString">
            <summary>Sets the shim of Offering.set_virtualLaneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.yellowLightGet">
            <summary>Sets the shim of Offering.get_yellowLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.AllInstances.yellowLightSetString">
            <summary>Sets the shim of Offering.set_yellowLight(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.Constructor">
            <summary>Sets the shim of Offering.Offering()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.accountHrefGet">
            <summary>Sets the shim of Offering.get_accountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.accountHrefSetString">
            <summary>Sets the shim of Offering.set_accountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.bidIncrementGet">
            <summary>Sets the shim of Offering.get_bidIncrement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.bidIncrementSetNullableOfInt32">
            <summary>Sets the shim of Offering.set_bidIncrement(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.blueLightGet">
            <summary>Sets the shim of Offering.get_blueLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.blueLightSetString">
            <summary>Sets the shim of Offering.set_blueLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.buyNowPriceGet">
            <summary>Sets the shim of Offering.get_buyNowPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.buyNowPriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_buyNowPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.buyerAccountHrefGet">
            <summary>Sets the shim of Offering.get_buyerAccountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.buyerAccountHrefSetString">
            <summary>Sets the shim of Offering.set_buyerAccountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.channelGet">
            <summary>Sets the shim of Offering.get_channel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.channelSetString">
            <summary>Sets the shim of Offering.set_channel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.consignmentHrefGet">
            <summary>Sets the shim of Offering.get_consignmentHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.consignmentHrefSetString">
            <summary>Sets the shim of Offering.set_consignmentHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.createdOnGet">
            <summary>Sets the shim of Offering.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.createdOnSetString">
            <summary>Sets the shim of Offering.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.currencyGet">
            <summary>Sets the shim of Offering.get_currency()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.currencySetString">
            <summary>Sets the shim of Offering.set_currency(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.customerHrefGet">
            <summary>Sets the shim of Offering.get_customerHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.customerHrefSetString">
            <summary>Sets the shim of Offering.set_customerHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.customerIDGet">
            <summary>Sets the shim of Offering.get_customerID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.customerIDSetString">
            <summary>Sets the shim of Offering.set_customerID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.dateGet">
            <summary>Sets the shim of Offering.get_date()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.dateSetDateTime">
            <summary>Sets the shim of Offering.set_date(DateTime value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.eventTypeGet">
            <summary>Sets the shim of Offering.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.eventTypeSetString">
            <summary>Sets the shim of Offering.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.facilitatingLocationHrefGet">
            <summary>Sets the shim of Offering.get_facilitatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.facilitatingLocationHrefSetString">
            <summary>Sets the shim of Offering.set_facilitatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.floorPriceGet">
            <summary>Sets the shim of Offering.get_floorPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.floorPriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_floorPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.greenLightGet">
            <summary>Sets the shim of Offering.get_greenLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.greenLightSetString">
            <summary>Sets the shim of Offering.set_greenLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.hrefGet">
            <summary>Sets the shim of Offering.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.hrefSetString">
            <summary>Sets the shim of Offering.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.laneNumberGet">
            <summary>Sets the shim of Offering.get_laneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.laneNumberSetString">
            <summary>Sets the shim of Offering.set_laneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingEndDateGet">
            <summary>Sets the shim of Offering.get_listingEndDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingEndDateSetString">
            <summary>Sets the shim of Offering.set_listingEndDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingStartDateGet">
            <summary>Sets the shim of Offering.get_listingStartDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingStartDateSetString">
            <summary>Sets the shim of Offering.set_listingStartDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingTypeGet">
            <summary>Sets the shim of Offering.get_listingType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.listingTypeSetString">
            <summary>Sets the shim of Offering.set_listingType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.manheimAccountNumberGet">
            <summary>Sets the shim of Offering.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.manheimAccountNumberSetString">
            <summary>Sets the shim of Offering.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.notesHrefGet">
            <summary>Sets the shim of Offering.get_notesHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.notesHrefSetString">
            <summary>Sets the shim of Offering.set_notesHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.offeringIDGet">
            <summary>Sets the shim of Offering.get_offeringID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.offeringIDSetString">
            <summary>Sets the shim of Offering.set_offeringID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.oveListingIdGet">
            <summary>Sets the shim of Offering.get_oveListingId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.oveListingIdSetString">
            <summary>Sets the shim of Offering.set_oveListingId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.physicalLaneNumberGet">
            <summary>Sets the shim of Offering.get_physicalLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.physicalLaneNumberSetString">
            <summary>Sets the shim of Offering.set_physicalLaneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.redLightGet">
            <summary>Sets the shim of Offering.get_redLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.redLightSetString">
            <summary>Sets the shim of Offering.set_redLight(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.registrationDateGet">
            <summary>Sets the shim of Offering.get_registrationDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.registrationDateSetString">
            <summary>Sets the shim of Offering.set_registrationDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.resourceGet">
            <summary>Sets the shim of Offering.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.resourceSetString">
            <summary>Sets the shim of Offering.set_resource(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.runNumberGet">
            <summary>Sets the shim of Offering.get_runNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.runNumberSetString">
            <summary>Sets the shim of Offering.set_runNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleLocationHrefGet">
            <summary>Sets the shim of Offering.get_saleLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleLocationHrefSetString">
            <summary>Sets the shim of Offering.set_saleLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleNumberGet">
            <summary>Sets the shim of Offering.get_saleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleNumberSetNullableOfInt32">
            <summary>Sets the shim of Offering.set_saleNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.salePriceGet">
            <summary>Sets the shim of Offering.get_salePrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.salePriceSetNullableOfDouble">
            <summary>Sets the shim of Offering.set_salePrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleTypeGet">
            <summary>Sets the shim of Offering.get_saleType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleTypeSetString">
            <summary>Sets the shim of Offering.set_saleType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleYearGet">
            <summary>Sets the shim of Offering.get_saleYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.saleYearSetString">
            <summary>Sets the shim of Offering.set_saleYear(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.statusGet">
            <summary>Sets the shim of Offering.get_status()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.statusSetString">
            <summary>Sets the shim of Offering.set_status(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.unitHrefGet">
            <summary>Sets the shim of Offering.get_unitHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.unitHrefSetString">
            <summary>Sets the shim of Offering.set_unitHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.unitSnapshotsCompletedGet">
            <summary>Sets the shim of Offering.get_unitSnapshotsCompleted()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.unitSnapshotsCompletedSetString">
            <summary>Sets the shim of Offering.set_unitSnapshotsCompleted(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.updatedOnGet">
            <summary>Sets the shim of Offering.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.updatedOnSetString">
            <summary>Sets the shim of Offering.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.virtualLaneNumberGet">
            <summary>Sets the shim of Offering.get_virtualLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.virtualLaneNumberSetString">
            <summary>Sets the shim of Offering.set_virtualLaneNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.yellowLightGet">
            <summary>Sets the shim of Offering.get_yellowLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOffering.yellowLightSetString">
            <summary>Sets the shim of Offering.set_yellowLight(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.bodyGet">
            <summary>Sets the shim of OfferingEvent.get_body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.bodySetOfferingEventBody">
            <summary>Sets the shim of OfferingEvent.set_body(Body value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.eventTypeGet">
            <summary>Sets the shim of OfferingEvent.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.eventTypeSetString">
            <summary>Sets the shim of OfferingEvent.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.relatedResourcesGet">
            <summary>Sets the shim of OfferingEvent.get_relatedResources()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.relatedResourcesSetListOfString">
            <summary>Sets the shim of OfferingEvent.set_relatedResources(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.resourceGet">
            <summary>Sets the shim of OfferingEvent.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.AllInstances.resourceSetString">
            <summary>Sets the shim of OfferingEvent.set_resource(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.Constructor">
            <summary>Sets the shim of OfferingEvent.OfferingEvent()</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Account</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Account)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.AllInstances.hrefGet">
            <summary>Sets the shim of Account.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.AllInstances.hrefSetString">
            <summary>Sets the shim of Account.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.Constructor">
            <summary>Sets the shim of Account.Account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.hrefGet">
            <summary>Sets the shim of Account.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimAccount.hrefSetString">
            <summary>Sets the shim of Account.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Body</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Body)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.announcementsGet">
            <summary>Sets the shim of Body.get_announcements()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.announcementsSetString">
            <summary>Sets the shim of Body.set_announcements(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.bidIncrementGet">
            <summary>Sets the shim of Body.get_bidIncrement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.bidIncrementSetNullableOfInt32">
            <summary>Sets the shim of Body.set_bidIncrement(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.blueLightGet">
            <summary>Sets the shim of Body.get_blueLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.blueLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_blueLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.buyNowPriceGet">
            <summary>Sets the shim of Body.get_buyNowPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.buyNowPriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_buyNowPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.buyerAccountGet">
            <summary>Sets the shim of Body.get_buyerAccount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.buyerAccountSetOfferingEventBuyerAccount">
            <summary>Sets the shim of Body.set_buyerAccount(BuyerAccount value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.channelGet">
            <summary>Sets the shim of Body.get_channel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.channelSetString">
            <summary>Sets the shim of Body.set_channel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.consignmentGet">
            <summary>Sets the shim of Body.get_consignment()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.consignmentSetOfferingEventConsignment">
            <summary>Sets the shim of Body.set_consignment(Consignment value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.createdOnGet">
            <summary>Sets the shim of Body.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.createdOnSetString">
            <summary>Sets the shim of Body.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.currencyGet">
            <summary>Sets the shim of Body.get_currency()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.currencySetString">
            <summary>Sets the shim of Body.set_currency(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.customerIdGet">
            <summary>Sets the shim of Body.get_customerId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.customerIdSetString">
            <summary>Sets the shim of Body.set_customerId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.facilitatingLocationGet">
            <summary>Sets the shim of Body.get_facilitatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.facilitatingLocationSetOfferingEventFacilitatingLocation">
            <summary>Sets the shim of Body.set_facilitatingLocation(FacilitatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.floorPriceGet">
            <summary>Sets the shim of Body.get_floorPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.floorPriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_floorPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.greenLightGet">
            <summary>Sets the shim of Body.get_greenLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.greenLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_greenLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.highBidGet">
            <summary>Sets the shim of Body.get_highBid()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.highBidSetDouble">
            <summary>Sets the shim of Body.set_highBid(Double value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.hrefGet">
            <summary>Sets the shim of Body.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.hrefSetString">
            <summary>Sets the shim of Body.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.laneNumberGet">
            <summary>Sets the shim of Body.get_laneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.laneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_laneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingEndDateGet">
            <summary>Sets the shim of Body.get_listingEndDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingEndDateSetString">
            <summary>Sets the shim of Body.set_listingEndDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingStartDateGet">
            <summary>Sets the shim of Body.get_listingStartDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingStartDateSetString">
            <summary>Sets the shim of Body.set_listingStartDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingTypeGet">
            <summary>Sets the shim of Body.get_listingType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.listingTypeSetString">
            <summary>Sets the shim of Body.set_listingType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.manheimAccountNumberGet">
            <summary>Sets the shim of Body.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.manheimAccountNumberSetString">
            <summary>Sets the shim of Body.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.notesGet">
            <summary>Sets the shim of Body.get_notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.notesSetOfferingEventNotes">
            <summary>Sets the shim of Body.set_notes(Notes value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.oveListingIdGet">
            <summary>Sets the shim of Body.get_oveListingId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.oveListingIdSetString">
            <summary>Sets the shim of Body.set_oveListingId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.physicalLaneNumberGet">
            <summary>Sets the shim of Body.get_physicalLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.physicalLaneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_physicalLaneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.redLightGet">
            <summary>Sets the shim of Body.get_redLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.redLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_redLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.registrationDateGet">
            <summary>Sets the shim of Body.get_registrationDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.registrationDateSetString">
            <summary>Sets the shim of Body.set_registrationDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.runNumberGet">
            <summary>Sets the shim of Body.get_runNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.runNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_runNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleLocationGet">
            <summary>Sets the shim of Body.get_saleLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleLocationSetOfferingEventSaleLocation">
            <summary>Sets the shim of Body.set_saleLocation(SaleLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleNumberGet">
            <summary>Sets the shim of Body.get_saleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_saleNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.salePriceGet">
            <summary>Sets the shim of Body.get_salePrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.salePriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_salePrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleTypeGet">
            <summary>Sets the shim of Body.get_saleType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleTypeSetString">
            <summary>Sets the shim of Body.set_saleType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleYearGet">
            <summary>Sets the shim of Body.get_saleYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.saleYearSetNullableOfInt32">
            <summary>Sets the shim of Body.set_saleYear(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.sellerInvoiceGet">
            <summary>Sets the shim of Body.get_sellerInvoice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.sellerInvoiceSetOfferingEventSellerInvoice">
            <summary>Sets the shim of Body.set_sellerInvoice(SellerInvoice value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.statusGet">
            <summary>Sets the shim of Body.get_status()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.statusSetString">
            <summary>Sets the shim of Body.set_status(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.unitGet">
            <summary>Sets the shim of Body.get_unit()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.unitSetOfferingEventUnit">
            <summary>Sets the shim of Body.set_unit(Unit value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.unitSnapshotsGet">
            <summary>Sets the shim of Body.get_unitSnapshots()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.unitSnapshotsSetOfferingEventUnitSnapshots">
            <summary>Sets the shim of Body.set_unitSnapshots(UnitSnapshots value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.updatedOnGet">
            <summary>Sets the shim of Body.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.updatedOnSetString">
            <summary>Sets the shim of Body.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.virtualLaneNumberGet">
            <summary>Sets the shim of Body.get_virtualLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.virtualLaneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_virtualLaneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.yellowLightGet">
            <summary>Sets the shim of Body.get_yellowLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.AllInstances.yellowLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_yellowLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.Constructor">
            <summary>Sets the shim of Body.Body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.announcementsGet">
            <summary>Sets the shim of Body.get_announcements()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.announcementsSetString">
            <summary>Sets the shim of Body.set_announcements(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.bidIncrementGet">
            <summary>Sets the shim of Body.get_bidIncrement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.bidIncrementSetNullableOfInt32">
            <summary>Sets the shim of Body.set_bidIncrement(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.blueLightGet">
            <summary>Sets the shim of Body.get_blueLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.blueLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_blueLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.buyNowPriceGet">
            <summary>Sets the shim of Body.get_buyNowPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.buyNowPriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_buyNowPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.buyerAccountGet">
            <summary>Sets the shim of Body.get_buyerAccount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.buyerAccountSetOfferingEventBuyerAccount">
            <summary>Sets the shim of Body.set_buyerAccount(BuyerAccount value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.channelGet">
            <summary>Sets the shim of Body.get_channel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.channelSetString">
            <summary>Sets the shim of Body.set_channel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.consignmentGet">
            <summary>Sets the shim of Body.get_consignment()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.consignmentSetOfferingEventConsignment">
            <summary>Sets the shim of Body.set_consignment(Consignment value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.createdOnGet">
            <summary>Sets the shim of Body.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.createdOnSetString">
            <summary>Sets the shim of Body.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.currencyGet">
            <summary>Sets the shim of Body.get_currency()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.currencySetString">
            <summary>Sets the shim of Body.set_currency(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.customerIdGet">
            <summary>Sets the shim of Body.get_customerId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.customerIdSetString">
            <summary>Sets the shim of Body.set_customerId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.facilitatingLocationGet">
            <summary>Sets the shim of Body.get_facilitatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.facilitatingLocationSetOfferingEventFacilitatingLocation">
            <summary>Sets the shim of Body.set_facilitatingLocation(FacilitatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.floorPriceGet">
            <summary>Sets the shim of Body.get_floorPrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.floorPriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_floorPrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.greenLightGet">
            <summary>Sets the shim of Body.get_greenLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.greenLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_greenLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.highBidGet">
            <summary>Sets the shim of Body.get_highBid()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.highBidSetDouble">
            <summary>Sets the shim of Body.set_highBid(Double value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.hrefGet">
            <summary>Sets the shim of Body.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.hrefSetString">
            <summary>Sets the shim of Body.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.laneNumberGet">
            <summary>Sets the shim of Body.get_laneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.laneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_laneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingEndDateGet">
            <summary>Sets the shim of Body.get_listingEndDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingEndDateSetString">
            <summary>Sets the shim of Body.set_listingEndDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingStartDateGet">
            <summary>Sets the shim of Body.get_listingStartDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingStartDateSetString">
            <summary>Sets the shim of Body.set_listingStartDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingTypeGet">
            <summary>Sets the shim of Body.get_listingType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.listingTypeSetString">
            <summary>Sets the shim of Body.set_listingType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.manheimAccountNumberGet">
            <summary>Sets the shim of Body.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.manheimAccountNumberSetString">
            <summary>Sets the shim of Body.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.notesGet">
            <summary>Sets the shim of Body.get_notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.notesSetOfferingEventNotes">
            <summary>Sets the shim of Body.set_notes(Notes value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.oveListingIdGet">
            <summary>Sets the shim of Body.get_oveListingId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.oveListingIdSetString">
            <summary>Sets the shim of Body.set_oveListingId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.physicalLaneNumberGet">
            <summary>Sets the shim of Body.get_physicalLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.physicalLaneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_physicalLaneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.redLightGet">
            <summary>Sets the shim of Body.get_redLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.redLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_redLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.registrationDateGet">
            <summary>Sets the shim of Body.get_registrationDate()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.registrationDateSetString">
            <summary>Sets the shim of Body.set_registrationDate(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.runNumberGet">
            <summary>Sets the shim of Body.get_runNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.runNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_runNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleLocationGet">
            <summary>Sets the shim of Body.get_saleLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleLocationSetOfferingEventSaleLocation">
            <summary>Sets the shim of Body.set_saleLocation(SaleLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleNumberGet">
            <summary>Sets the shim of Body.get_saleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_saleNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.salePriceGet">
            <summary>Sets the shim of Body.get_salePrice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.salePriceSetNullableOfDouble">
            <summary>Sets the shim of Body.set_salePrice(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleTypeGet">
            <summary>Sets the shim of Body.get_saleType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleTypeSetString">
            <summary>Sets the shim of Body.set_saleType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleYearGet">
            <summary>Sets the shim of Body.get_saleYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.saleYearSetNullableOfInt32">
            <summary>Sets the shim of Body.set_saleYear(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.sellerInvoiceGet">
            <summary>Sets the shim of Body.get_sellerInvoice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.sellerInvoiceSetOfferingEventSellerInvoice">
            <summary>Sets the shim of Body.set_sellerInvoice(SellerInvoice value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.statusGet">
            <summary>Sets the shim of Body.get_status()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.statusSetString">
            <summary>Sets the shim of Body.set_status(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.unitGet">
            <summary>Sets the shim of Body.get_unit()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.unitSetOfferingEventUnit">
            <summary>Sets the shim of Body.set_unit(Unit value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.unitSnapshotsGet">
            <summary>Sets the shim of Body.get_unitSnapshots()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.unitSnapshotsSetOfferingEventUnitSnapshots">
            <summary>Sets the shim of Body.set_unitSnapshots(UnitSnapshots value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.updatedOnGet">
            <summary>Sets the shim of Body.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.updatedOnSetString">
            <summary>Sets the shim of Body.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.virtualLaneNumberGet">
            <summary>Sets the shim of Body.get_virtualLaneNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.virtualLaneNumberSetNullableOfInt32">
            <summary>Sets the shim of Body.set_virtualLaneNumber(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.yellowLightGet">
            <summary>Sets the shim of Body.get_yellowLight()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBody.yellowLightSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_yellowLight(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+BuyerAccount</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.BuyerAccount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.AllInstances.hrefGet">
            <summary>Sets the shim of BuyerAccount.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.AllInstances.hrefSetString">
            <summary>Sets the shim of BuyerAccount.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.Constructor">
            <summary>Sets the shim of BuyerAccount.BuyerAccount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.hrefGet">
            <summary>Sets the shim of BuyerAccount.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimBuyerAccount.hrefSetString">
            <summary>Sets the shim of BuyerAccount.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Completed</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Completed)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.AllInstances.hrefGet">
            <summary>Sets the shim of Completed.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.AllInstances.hrefSetString">
            <summary>Sets the shim of Completed.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.Constructor">
            <summary>Sets the shim of Completed.Completed()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.hrefGet">
            <summary>Sets the shim of Completed.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCompleted.hrefSetString">
            <summary>Sets the shim of Completed.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Consignment</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Consignment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.AllInstances.hrefGet">
            <summary>Sets the shim of Consignment.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.AllInstances.hrefSetString">
            <summary>Sets the shim of Consignment.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.Constructor">
            <summary>Sets the shim of Consignment.Consignment()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.hrefGet">
            <summary>Sets the shim of Consignment.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimConsignment.hrefSetString">
            <summary>Sets the shim of Consignment.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Customer</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Customer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.AllInstances.hrefGet">
            <summary>Sets the shim of Customer.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.AllInstances.hrefSetString">
            <summary>Sets the shim of Customer.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.Constructor">
            <summary>Sets the shim of Customer.Customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.hrefGet">
            <summary>Sets the shim of Customer.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimCustomer.hrefSetString">
            <summary>Sets the shim of Customer.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+FacilitatingLocation</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.FacilitatingLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.AllInstances.hrefGet">
            <summary>Sets the shim of FacilitatingLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.AllInstances.hrefSetString">
            <summary>Sets the shim of FacilitatingLocation.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.Constructor">
            <summary>Sets the shim of FacilitatingLocation.FacilitatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.hrefGet">
            <summary>Sets the shim of FacilitatingLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimFacilitatingLocation.hrefSetString">
            <summary>Sets the shim of FacilitatingLocation.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Notes</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Notes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.AllInstances.hrefGet">
            <summary>Sets the shim of Notes.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.AllInstances.hrefSetString">
            <summary>Sets the shim of Notes.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.Constructor">
            <summary>Sets the shim of Notes.Notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.hrefGet">
            <summary>Sets the shim of Notes.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimNotes.hrefSetString">
            <summary>Sets the shim of Notes.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+SaleLocation</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.SaleLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.AllInstances.hrefGet">
            <summary>Sets the shim of SaleLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.AllInstances.hrefSetString">
            <summary>Sets the shim of SaleLocation.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.Constructor">
            <summary>Sets the shim of SaleLocation.SaleLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.hrefGet">
            <summary>Sets the shim of SaleLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSaleLocation.hrefSetString">
            <summary>Sets the shim of SaleLocation.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+SellerInvoice</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.SellerInvoice)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.AllInstances.hrefGet">
            <summary>Sets the shim of SellerInvoice.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.AllInstances.hrefSetString">
            <summary>Sets the shim of SellerInvoice.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.Constructor">
            <summary>Sets the shim of SellerInvoice.SellerInvoice()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.hrefGet">
            <summary>Sets the shim of SellerInvoice.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimSellerInvoice.hrefSetString">
            <summary>Sets the shim of SellerInvoice.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+Unit</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.Unit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.accountGet">
            <summary>Sets the shim of Unit.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.accountSetOfferingEventAccount">
            <summary>Sets the shim of Unit.set_account(Account value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.customerGet">
            <summary>Sets the shim of Unit.get_customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.customerSetOfferingEventCustomer">
            <summary>Sets the shim of Unit.set_customer(Customer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.hrefGet">
            <summary>Sets the shim of Unit.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.AllInstances.hrefSetString">
            <summary>Sets the shim of Unit.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.Constructor">
            <summary>Sets the shim of Unit.Unit()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.accountGet">
            <summary>Sets the shim of Unit.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.accountSetOfferingEventAccount">
            <summary>Sets the shim of Unit.set_account(Account value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.customerGet">
            <summary>Sets the shim of Unit.get_customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.customerSetOfferingEventCustomer">
            <summary>Sets the shim of Unit.set_customer(Customer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.hrefGet">
            <summary>Sets the shim of Unit.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnit.hrefSetString">
            <summary>Sets the shim of Unit.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots">
            <summary>Shim type of ManheimEventApi.Models.Offerings.OfferingEvent+UnitSnapshots</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.#ctor(ManheimEventApi.Models.Offerings.OfferingEvent.UnitSnapshots)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.AllInstances.completedGet">
            <summary>Sets the shim of UnitSnapshots.get_completed()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.AllInstances.completedSetOfferingEventCompleted">
            <summary>Sets the shim of UnitSnapshots.set_completed(Completed value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.Constructor">
            <summary>Sets the shim of UnitSnapshots.UnitSnapshots()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.completedGet">
            <summary>Sets the shim of UnitSnapshots.get_completed()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.ShimUnitSnapshots.completedSetOfferingEventCompleted">
            <summary>Sets the shim of UnitSnapshots.set_completed(Completed value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.bodyGet">
            <summary>Sets the shim of OfferingEvent.get_body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.bodySetOfferingEventBody">
            <summary>Sets the shim of OfferingEvent.set_body(Body value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.eventTypeGet">
            <summary>Sets the shim of OfferingEvent.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.eventTypeSetString">
            <summary>Sets the shim of OfferingEvent.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.relatedResourcesGet">
            <summary>Sets the shim of OfferingEvent.get_relatedResources()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.relatedResourcesSetListOfString">
            <summary>Sets the shim of OfferingEvent.set_relatedResources(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.resourceGet">
            <summary>Sets the shim of OfferingEvent.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.ShimOfferingEvent.resourceSetString">
            <summary>Sets the shim of OfferingEvent.set_resource(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.StubOffering">
            <summary>Stub type of ManheimEventApi.Models.Offerings.Offering</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.StubOffering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOffering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.StubOffering.InitializeStub">
            <summary>Initializes a new instance of type StubOffering</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOffering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOffering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent">
            <summary>Stub type of ManheimEventApi.Models.Offerings.OfferingEvent</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent.InitializeStub">
            <summary>Initializes a new instance of type StubOfferingEvent</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Offerings.Fakes.StubOfferingEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimAudio">
            <summary>Shim type of ManheimEventApi.Models.Units.Audio</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimAudio.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimAudio.#ctor(ManheimEventApi.Models.Units.Audio)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimAudio.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.AllInstances.IDGet">
            <summary>Sets the shim of Audio.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.AllInstances.IDSetInt32">
            <summary>Sets the shim of Audio.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.AllInstances.typeGet">
            <summary>Sets the shim of Audio.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.AllInstances.typeSetString">
            <summary>Sets the shim of Audio.set_type(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimAudio.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimAudio.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.Constructor">
            <summary>Sets the shim of Audio.Audio()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.IDGet">
            <summary>Sets the shim of Audio.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.IDSetInt32">
            <summary>Sets the shim of Audio.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.typeGet">
            <summary>Sets the shim of Audio.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimAudio.typeSetString">
            <summary>Sets the shim of Audio.set_type(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimConditionReport">
            <summary>Shim type of ManheimEventApi.Models.Units.ConditionReport</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.#ctor(ManheimEventApi.Models.Units.ConditionReport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.IDGet">
            <summary>Sets the shim of ConditionReport.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.IDSetInt32">
            <summary>Sets the shim of ConditionReport.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.hrefGet">
            <summary>Sets the shim of ConditionReport.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.hrefSetString">
            <summary>Sets the shim of ConditionReport.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.sourceGet">
            <summary>Sets the shim of ConditionReport.get_source()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.AllInstances.sourceSetString">
            <summary>Sets the shim of ConditionReport.set_source(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.Constructor">
            <summary>Sets the shim of ConditionReport.ConditionReport()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.IDGet">
            <summary>Sets the shim of ConditionReport.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.IDSetInt32">
            <summary>Sets the shim of ConditionReport.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.hrefGet">
            <summary>Sets the shim of ConditionReport.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.hrefSetString">
            <summary>Sets the shim of ConditionReport.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.sourceGet">
            <summary>Sets the shim of ConditionReport.get_source()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimConditionReport.sourceSetString">
            <summary>Sets the shim of ConditionReport.set_source(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimImages">
            <summary>Shim type of ManheimEventApi.Models.Units.Images</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimImages.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimImages.#ctor(ManheimEventApi.Models.Units.Images)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.IDGet">
            <summary>Sets the shim of Images.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.IDSetInt32">
            <summary>Sets the shim of Images.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.hrefGet">
            <summary>Sets the shim of Images.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.hrefSetString">
            <summary>Sets the shim of Images.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.typeGet">
            <summary>Sets the shim of Images.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.AllInstances.typeSetString">
            <summary>Sets the shim of Images.set_type(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimImages.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimImages.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.Constructor">
            <summary>Sets the shim of Images.Images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.IDGet">
            <summary>Sets the shim of Images.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.IDSetInt32">
            <summary>Sets the shim of Images.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.hrefGet">
            <summary>Sets the shim of Images.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.hrefSetString">
            <summary>Sets the shim of Images.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.typeGet">
            <summary>Sets the shim of Images.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimImages.typeSetString">
            <summary>Sets the shim of Images.set_type(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimOptions">
            <summary>Shim type of ManheimEventApi.Models.Units.Options</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimOptions.#ctor(ManheimEventApi.Models.Units.Options)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.AllInstances.IDGet">
            <summary>Sets the shim of Options.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.AllInstances.IDSetInt32">
            <summary>Sets the shim of Options.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.AllInstances.typeGet">
            <summary>Sets the shim of Options.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.AllInstances.typeSetString">
            <summary>Sets the shim of Options.set_type(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.Constructor">
            <summary>Sets the shim of Options.Options()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.IDGet">
            <summary>Sets the shim of Options.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.IDSetInt32">
            <summary>Sets the shim of Options.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.typeGet">
            <summary>Sets the shim of Options.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimOptions.typeSetString">
            <summary>Sets the shim of Options.set_type(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint">
            <summary>Shim type of ManheimEventApi.Models.Units.PriorPaint</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.#ctor(ManheimEventApi.Models.Units.PriorPaint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.IDGet">
            <summary>Sets the shim of PriorPaint.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.IDSetInt32">
            <summary>Sets the shim of PriorPaint.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.conditionGet">
            <summary>Sets the shim of PriorPaint.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.conditionSetString">
            <summary>Sets the shim of PriorPaint.set_condition(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.descriptionGet">
            <summary>Sets the shim of PriorPaint.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.AllInstances.descriptionSetString">
            <summary>Sets the shim of PriorPaint.set_description(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.Constructor">
            <summary>Sets the shim of PriorPaint.PriorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.IDGet">
            <summary>Sets the shim of PriorPaint.get_ID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.IDSetInt32">
            <summary>Sets the shim of PriorPaint.set_ID(Int32 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.conditionGet">
            <summary>Sets the shim of PriorPaint.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.conditionSetString">
            <summary>Sets the shim of PriorPaint.set_condition(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.descriptionGet">
            <summary>Sets the shim of PriorPaint.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimPriorPaint.descriptionSetString">
            <summary>Sets the shim of PriorPaint.set_description(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnit">
            <summary>Shim type of ManheimEventApi.Models.Units.Unit</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnit.#ctor(ManheimEventApi.Models.Units.Unit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.accountHrefGet">
            <summary>Sets the shim of Unit.get_accountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.accountHrefSetString">
            <summary>Sets the shim of Unit.set_accountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.accountIDGet">
            <summary>Sets the shim of Unit.get_accountID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.accountIDSetString">
            <summary>Sets the shim of Unit.set_accountID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.activeGet">
            <summary>Sets the shim of Unit.get_active()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.activeSetString">
            <summary>Sets the shim of Unit.set_active(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.audioGet">
            <summary>Sets the shim of Unit.get_audio()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.audioSetListOfAudio">
            <summary>Sets the shim of Unit.set_audio(List`1&lt;Audio&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.companyNameGet">
            <summary>Sets the shim of Unit.get_companyName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.companyNameSetString">
            <summary>Sets the shim of Unit.set_companyName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.conditionReportsGet">
            <summary>Sets the shim of Unit.get_conditionReports()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.conditionReportsSetListOfConditionReport">
            <summary>Sets the shim of Unit.set_conditionReports(List`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.consignmentsHrefGet">
            <summary>Sets the shim of Unit.get_consignmentsHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.consignmentsHrefSetString">
            <summary>Sets the shim of Unit.set_consignmentsHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactEmailGet">
            <summary>Sets the shim of Unit.get_contactEmail()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactEmailSetString">
            <summary>Sets the shim of Unit.set_contactEmail(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactNameGet">
            <summary>Sets the shim of Unit.get_contactName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactNameSetString">
            <summary>Sets the shim of Unit.set_contactName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactPhoneGet">
            <summary>Sets the shim of Unit.get_contactPhone()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.contactPhoneSetString">
            <summary>Sets the shim of Unit.set_contactPhone(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.createdOnGet">
            <summary>Sets the shim of Unit.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.createdOnSetString">
            <summary>Sets the shim of Unit.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerHrefGet">
            <summary>Sets the shim of Unit.get_customerHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerHrefSetString">
            <summary>Sets the shim of Unit.set_customerHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerIDGet">
            <summary>Sets the shim of Unit.get_customerID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerIDSetString">
            <summary>Sets the shim of Unit.set_customerID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerReferenceIDGet">
            <summary>Sets the shim of Unit.get_customerReferenceID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.customerReferenceIDSetString">
            <summary>Sets the shim of Unit.set_customerReferenceID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.dateGet">
            <summary>Sets the shim of Unit.get_date()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.dateSetDateTime">
            <summary>Sets the shim of Unit.set_date(DateTime value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.doorCountGet">
            <summary>Sets the shim of Unit.get_doorCount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.doorCountSetString">
            <summary>Sets the shim of Unit.set_doorCount(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.driveTypeGet">
            <summary>Sets the shim of Unit.get_driveType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.driveTypeSetString">
            <summary>Sets the shim of Unit.set_driveType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineDisplacementGet">
            <summary>Sets the shim of Unit.get_engineDisplacement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineDisplacementSetString">
            <summary>Sets the shim of Unit.set_engineDisplacement(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineFuelGet">
            <summary>Sets the shim of Unit.get_engineFuel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineFuelSetString">
            <summary>Sets the shim of Unit.set_engineFuel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineHorsepowerGet">
            <summary>Sets the shim of Unit.get_engineHorsepower()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineHorsepowerSetString">
            <summary>Sets the shim of Unit.set_engineHorsepower(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineTypeGet">
            <summary>Sets the shim of Unit.get_engineType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.engineTypeSetString">
            <summary>Sets the shim of Unit.set_engineType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.eventTypeGet">
            <summary>Sets the shim of Unit.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.eventTypeSetString">
            <summary>Sets the shim of Unit.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.exteriorColorCodeGet">
            <summary>Sets the shim of Unit.get_exteriorColorCode()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.exteriorColorCodeSetString">
            <summary>Sets the shim of Unit.set_exteriorColorCode(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.exteriorColorDescriptionGet">
            <summary>Sets the shim of Unit.get_exteriorColorDescription()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.exteriorColorDescriptionSetString">
            <summary>Sets the shim of Unit.set_exteriorColorDescription(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.frameDamageGet">
            <summary>Sets the shim of Unit.get_frameDamage()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.frameDamageSetString">
            <summary>Sets the shim of Unit.set_frameDamage(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.hrefGet">
            <summary>Sets the shim of Unit.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.hrefSetString">
            <summary>Sets the shim of Unit.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.imagesGet">
            <summary>Sets the shim of Unit.get_images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.imagesSetListOfImages">
            <summary>Sets the shim of Unit.set_images(List`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorColorCodeGet">
            <summary>Sets the shim of Unit.get_interiorColorCode()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorColorCodeSetString">
            <summary>Sets the shim of Unit.set_interiorColorCode(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorColorDescriptionGet">
            <summary>Sets the shim of Unit.get_interiorColorDescription()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorColorDescriptionSetString">
            <summary>Sets the shim of Unit.set_interiorColorDescription(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorTypeGet">
            <summary>Sets the shim of Unit.get_interiorType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.interiorTypeSetString">
            <summary>Sets the shim of Unit.set_interiorType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.makeGet">
            <summary>Sets the shim of Unit.get_make()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.makeSetString">
            <summary>Sets the shim of Unit.set_make(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.manheimAccountNumberGet">
            <summary>Sets the shim of Unit.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.manheimAccountNumberSetString">
            <summary>Sets the shim of Unit.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.modelGet">
            <summary>Sets the shim of Unit.get_model()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.modelSetString">
            <summary>Sets the shim of Unit.set_model(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.modelYearGet">
            <summary>Sets the shim of Unit.get_modelYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.modelYearSetString">
            <summary>Sets the shim of Unit.set_modelYear(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.notesHrefGet">
            <summary>Sets the shim of Unit.get_notesHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.notesHrefSetString">
            <summary>Sets the shim of Unit.set_notesHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerDigitsGet">
            <summary>Sets the shim of Unit.get_odometerDigits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerDigitsSetString">
            <summary>Sets the shim of Unit.set_odometerDigits(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerReadingGet">
            <summary>Sets the shim of Unit.get_odometerReading()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerReadingSetString">
            <summary>Sets the shim of Unit.set_odometerReading(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerTypeGet">
            <summary>Sets the shim of Unit.get_odometerType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerTypeSetString">
            <summary>Sets the shim of Unit.set_odometerType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerUnitsGet">
            <summary>Sets the shim of Unit.get_odometerUnits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.odometerUnitsSetString">
            <summary>Sets the shim of Unit.set_odometerUnits(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.offeringsHrefGet">
            <summary>Sets the shim of Unit.get_offeringsHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.offeringsHrefSetString">
            <summary>Sets the shim of Unit.set_offeringsHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.optionsGet">
            <summary>Sets the shim of Unit.get_options()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.optionsSetListOfOptions">
            <summary>Sets the shim of Unit.set_options(List`1&lt;Options&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ordersHrefGet">
            <summary>Sets the shim of Unit.get_ordersHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ordersHrefSetString">
            <summary>Sets the shim of Unit.set_ordersHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerAccountHrefGet">
            <summary>Sets the shim of Unit.get_ownerAccountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerAccountHrefSetString">
            <summary>Sets the shim of Unit.set_ownerAccountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerCompanyHrefGet">
            <summary>Sets the shim of Unit.get_ownerCompanyHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerCompanyHrefSetString">
            <summary>Sets the shim of Unit.set_ownerCompanyHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerManheimAccountNumberGet">
            <summary>Sets the shim of Unit.get_ownerManheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.ownerManheimAccountNumberSetString">
            <summary>Sets the shim of Unit.set_ownerManheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationAddressGet">
            <summary>Sets the shim of Unit.get_physicalLocationAddress()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationAddressSetString">
            <summary>Sets the shim of Unit.set_physicalLocationAddress(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationCityGet">
            <summary>Sets the shim of Unit.get_physicalLocationCity()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationCitySetString">
            <summary>Sets the shim of Unit.set_physicalLocationCity(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationOperatingLocationHrefGet">
            <summary>Sets the shim of Unit.get_physicalLocationOperatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationOperatingLocationHrefSetString">
            <summary>Sets the shim of Unit.set_physicalLocationOperatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationStateGet">
            <summary>Sets the shim of Unit.get_physicalLocationState()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationStateSetString">
            <summary>Sets the shim of Unit.set_physicalLocationState(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationTypeGet">
            <summary>Sets the shim of Unit.get_physicalLocationType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationTypeSetString">
            <summary>Sets the shim of Unit.set_physicalLocationType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationZipGet">
            <summary>Sets the shim of Unit.get_physicalLocationZip()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.physicalLocationZipSetString">
            <summary>Sets the shim of Unit.set_physicalLocationZip(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.priorPaintGet">
            <summary>Sets the shim of Unit.get_priorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.priorPaintSetListOfPriorPaint">
            <summary>Sets the shim of Unit.set_priorPaint(List`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.resourceGet">
            <summary>Sets the shim of Unit.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.resourceSetString">
            <summary>Sets the shim of Unit.set_resource(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.roofTypeGet">
            <summary>Sets the shim of Unit.get_roofType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.roofTypeSetString">
            <summary>Sets the shim of Unit.set_roofType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.subscriptionHrefGet">
            <summary>Sets the shim of Unit.get_subscriptionHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.subscriptionHrefSetString">
            <summary>Sets the shim of Unit.set_subscriptionHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.subtypeGet">
            <summary>Sets the shim of Unit.get_subtype()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.subtypeSetString">
            <summary>Sets the shim of Unit.set_subtype(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleBrandingGet">
            <summary>Sets the shim of Unit.get_titleBranding()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleBrandingSetString">
            <summary>Sets the shim of Unit.set_titleBranding(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleLocationGet">
            <summary>Sets the shim of Unit.get_titleLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleLocationSetString">
            <summary>Sets the shim of Unit.set_titleLocation(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleNumberGet">
            <summary>Sets the shim of Unit.get_titleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleNumberSetString">
            <summary>Sets the shim of Unit.set_titleNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleOperatingLocationHrefGet">
            <summary>Sets the shim of Unit.get_titleOperatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleOperatingLocationHrefSetString">
            <summary>Sets the shim of Unit.set_titleOperatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleProblemGet">
            <summary>Sets the shim of Unit.get_titleProblem()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleProblemSetString">
            <summary>Sets the shim of Unit.set_titleProblem(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleStateGet">
            <summary>Sets the shim of Unit.get_titleState()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.titleStateSetString">
            <summary>Sets the shim of Unit.set_titleState(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.transmissionGet">
            <summary>Sets the shim of Unit.get_transmission()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.transmissionSetString">
            <summary>Sets the shim of Unit.set_transmission(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.trimGet">
            <summary>Sets the shim of Unit.get_trim()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.trimSetString">
            <summary>Sets the shim of Unit.set_trim(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.typeGet">
            <summary>Sets the shim of Unit.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.typeSetString">
            <summary>Sets the shim of Unit.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.updatedOnGet">
            <summary>Sets the shim of Unit.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.updatedOnSetString">
            <summary>Sets the shim of Unit.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.vehicleHrefGet">
            <summary>Sets the shim of Unit.get_vehicleHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.vehicleHrefSetString">
            <summary>Sets the shim of Unit.set_vehicleHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.vinGet">
            <summary>Sets the shim of Unit.get_vin()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.AllInstances.vinSetString">
            <summary>Sets the shim of Unit.set_vin(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.Constructor">
            <summary>Sets the shim of Unit.Unit()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.accountHrefGet">
            <summary>Sets the shim of Unit.get_accountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.accountHrefSetString">
            <summary>Sets the shim of Unit.set_accountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.accountIDGet">
            <summary>Sets the shim of Unit.get_accountID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.accountIDSetString">
            <summary>Sets the shim of Unit.set_accountID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.activeGet">
            <summary>Sets the shim of Unit.get_active()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.activeSetString">
            <summary>Sets the shim of Unit.set_active(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.audioGet">
            <summary>Sets the shim of Unit.get_audio()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.audioSetListOfAudio">
            <summary>Sets the shim of Unit.set_audio(List`1&lt;Audio&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.companyNameGet">
            <summary>Sets the shim of Unit.get_companyName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.companyNameSetString">
            <summary>Sets the shim of Unit.set_companyName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.conditionReportsGet">
            <summary>Sets the shim of Unit.get_conditionReports()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.conditionReportsSetListOfConditionReport">
            <summary>Sets the shim of Unit.set_conditionReports(List`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.consignmentsHrefGet">
            <summary>Sets the shim of Unit.get_consignmentsHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.consignmentsHrefSetString">
            <summary>Sets the shim of Unit.set_consignmentsHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactEmailGet">
            <summary>Sets the shim of Unit.get_contactEmail()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactEmailSetString">
            <summary>Sets the shim of Unit.set_contactEmail(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactNameGet">
            <summary>Sets the shim of Unit.get_contactName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactNameSetString">
            <summary>Sets the shim of Unit.set_contactName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactPhoneGet">
            <summary>Sets the shim of Unit.get_contactPhone()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.contactPhoneSetString">
            <summary>Sets the shim of Unit.set_contactPhone(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.createdOnGet">
            <summary>Sets the shim of Unit.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.createdOnSetString">
            <summary>Sets the shim of Unit.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerHrefGet">
            <summary>Sets the shim of Unit.get_customerHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerHrefSetString">
            <summary>Sets the shim of Unit.set_customerHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerIDGet">
            <summary>Sets the shim of Unit.get_customerID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerIDSetString">
            <summary>Sets the shim of Unit.set_customerID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerReferenceIDGet">
            <summary>Sets the shim of Unit.get_customerReferenceID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.customerReferenceIDSetString">
            <summary>Sets the shim of Unit.set_customerReferenceID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.dateGet">
            <summary>Sets the shim of Unit.get_date()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.dateSetDateTime">
            <summary>Sets the shim of Unit.set_date(DateTime value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.doorCountGet">
            <summary>Sets the shim of Unit.get_doorCount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.doorCountSetString">
            <summary>Sets the shim of Unit.set_doorCount(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.driveTypeGet">
            <summary>Sets the shim of Unit.get_driveType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.driveTypeSetString">
            <summary>Sets the shim of Unit.set_driveType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineDisplacementGet">
            <summary>Sets the shim of Unit.get_engineDisplacement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineDisplacementSetString">
            <summary>Sets the shim of Unit.set_engineDisplacement(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineFuelGet">
            <summary>Sets the shim of Unit.get_engineFuel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineFuelSetString">
            <summary>Sets the shim of Unit.set_engineFuel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineHorsepowerGet">
            <summary>Sets the shim of Unit.get_engineHorsepower()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineHorsepowerSetString">
            <summary>Sets the shim of Unit.set_engineHorsepower(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineTypeGet">
            <summary>Sets the shim of Unit.get_engineType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.engineTypeSetString">
            <summary>Sets the shim of Unit.set_engineType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.eventTypeGet">
            <summary>Sets the shim of Unit.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.eventTypeSetString">
            <summary>Sets the shim of Unit.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.exteriorColorCodeGet">
            <summary>Sets the shim of Unit.get_exteriorColorCode()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.exteriorColorCodeSetString">
            <summary>Sets the shim of Unit.set_exteriorColorCode(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.exteriorColorDescriptionGet">
            <summary>Sets the shim of Unit.get_exteriorColorDescription()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.exteriorColorDescriptionSetString">
            <summary>Sets the shim of Unit.set_exteriorColorDescription(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.frameDamageGet">
            <summary>Sets the shim of Unit.get_frameDamage()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.frameDamageSetString">
            <summary>Sets the shim of Unit.set_frameDamage(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.hrefGet">
            <summary>Sets the shim of Unit.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.hrefSetString">
            <summary>Sets the shim of Unit.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.imagesGet">
            <summary>Sets the shim of Unit.get_images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.imagesSetListOfImages">
            <summary>Sets the shim of Unit.set_images(List`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorColorCodeGet">
            <summary>Sets the shim of Unit.get_interiorColorCode()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorColorCodeSetString">
            <summary>Sets the shim of Unit.set_interiorColorCode(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorColorDescriptionGet">
            <summary>Sets the shim of Unit.get_interiorColorDescription()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorColorDescriptionSetString">
            <summary>Sets the shim of Unit.set_interiorColorDescription(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorTypeGet">
            <summary>Sets the shim of Unit.get_interiorType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.interiorTypeSetString">
            <summary>Sets the shim of Unit.set_interiorType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.makeGet">
            <summary>Sets the shim of Unit.get_make()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.makeSetString">
            <summary>Sets the shim of Unit.set_make(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.manheimAccountNumberGet">
            <summary>Sets the shim of Unit.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.manheimAccountNumberSetString">
            <summary>Sets the shim of Unit.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.modelGet">
            <summary>Sets the shim of Unit.get_model()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.modelSetString">
            <summary>Sets the shim of Unit.set_model(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.modelYearGet">
            <summary>Sets the shim of Unit.get_modelYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.modelYearSetString">
            <summary>Sets the shim of Unit.set_modelYear(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.notesHrefGet">
            <summary>Sets the shim of Unit.get_notesHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.notesHrefSetString">
            <summary>Sets the shim of Unit.set_notesHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerDigitsGet">
            <summary>Sets the shim of Unit.get_odometerDigits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerDigitsSetString">
            <summary>Sets the shim of Unit.set_odometerDigits(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerReadingGet">
            <summary>Sets the shim of Unit.get_odometerReading()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerReadingSetString">
            <summary>Sets the shim of Unit.set_odometerReading(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerTypeGet">
            <summary>Sets the shim of Unit.get_odometerType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerTypeSetString">
            <summary>Sets the shim of Unit.set_odometerType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerUnitsGet">
            <summary>Sets the shim of Unit.get_odometerUnits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.odometerUnitsSetString">
            <summary>Sets the shim of Unit.set_odometerUnits(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.offeringsHrefGet">
            <summary>Sets the shim of Unit.get_offeringsHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.offeringsHrefSetString">
            <summary>Sets the shim of Unit.set_offeringsHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.optionsGet">
            <summary>Sets the shim of Unit.get_options()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.optionsSetListOfOptions">
            <summary>Sets the shim of Unit.set_options(List`1&lt;Options&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ordersHrefGet">
            <summary>Sets the shim of Unit.get_ordersHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ordersHrefSetString">
            <summary>Sets the shim of Unit.set_ordersHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerAccountHrefGet">
            <summary>Sets the shim of Unit.get_ownerAccountHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerAccountHrefSetString">
            <summary>Sets the shim of Unit.set_ownerAccountHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerCompanyHrefGet">
            <summary>Sets the shim of Unit.get_ownerCompanyHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerCompanyHrefSetString">
            <summary>Sets the shim of Unit.set_ownerCompanyHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerManheimAccountNumberGet">
            <summary>Sets the shim of Unit.get_ownerManheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.ownerManheimAccountNumberSetString">
            <summary>Sets the shim of Unit.set_ownerManheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationAddressGet">
            <summary>Sets the shim of Unit.get_physicalLocationAddress()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationAddressSetString">
            <summary>Sets the shim of Unit.set_physicalLocationAddress(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationCityGet">
            <summary>Sets the shim of Unit.get_physicalLocationCity()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationCitySetString">
            <summary>Sets the shim of Unit.set_physicalLocationCity(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationOperatingLocationHrefGet">
            <summary>Sets the shim of Unit.get_physicalLocationOperatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationOperatingLocationHrefSetString">
            <summary>Sets the shim of Unit.set_physicalLocationOperatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationStateGet">
            <summary>Sets the shim of Unit.get_physicalLocationState()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationStateSetString">
            <summary>Sets the shim of Unit.set_physicalLocationState(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationTypeGet">
            <summary>Sets the shim of Unit.get_physicalLocationType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationTypeSetString">
            <summary>Sets the shim of Unit.set_physicalLocationType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationZipGet">
            <summary>Sets the shim of Unit.get_physicalLocationZip()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.physicalLocationZipSetString">
            <summary>Sets the shim of Unit.set_physicalLocationZip(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.priorPaintGet">
            <summary>Sets the shim of Unit.get_priorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.priorPaintSetListOfPriorPaint">
            <summary>Sets the shim of Unit.set_priorPaint(List`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.resourceGet">
            <summary>Sets the shim of Unit.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.resourceSetString">
            <summary>Sets the shim of Unit.set_resource(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.roofTypeGet">
            <summary>Sets the shim of Unit.get_roofType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.roofTypeSetString">
            <summary>Sets the shim of Unit.set_roofType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.subscriptionHrefGet">
            <summary>Sets the shim of Unit.get_subscriptionHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.subscriptionHrefSetString">
            <summary>Sets the shim of Unit.set_subscriptionHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.subtypeGet">
            <summary>Sets the shim of Unit.get_subtype()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.subtypeSetString">
            <summary>Sets the shim of Unit.set_subtype(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleBrandingGet">
            <summary>Sets the shim of Unit.get_titleBranding()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleBrandingSetString">
            <summary>Sets the shim of Unit.set_titleBranding(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleLocationGet">
            <summary>Sets the shim of Unit.get_titleLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleLocationSetString">
            <summary>Sets the shim of Unit.set_titleLocation(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleNumberGet">
            <summary>Sets the shim of Unit.get_titleNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleNumberSetString">
            <summary>Sets the shim of Unit.set_titleNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleOperatingLocationHrefGet">
            <summary>Sets the shim of Unit.get_titleOperatingLocationHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleOperatingLocationHrefSetString">
            <summary>Sets the shim of Unit.set_titleOperatingLocationHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleProblemGet">
            <summary>Sets the shim of Unit.get_titleProblem()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleProblemSetString">
            <summary>Sets the shim of Unit.set_titleProblem(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleStateGet">
            <summary>Sets the shim of Unit.get_titleState()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.titleStateSetString">
            <summary>Sets the shim of Unit.set_titleState(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.transmissionGet">
            <summary>Sets the shim of Unit.get_transmission()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.transmissionSetString">
            <summary>Sets the shim of Unit.set_transmission(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.trimGet">
            <summary>Sets the shim of Unit.get_trim()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.trimSetString">
            <summary>Sets the shim of Unit.set_trim(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.typeGet">
            <summary>Sets the shim of Unit.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.typeSetString">
            <summary>Sets the shim of Unit.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.updatedOnGet">
            <summary>Sets the shim of Unit.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.updatedOnSetString">
            <summary>Sets the shim of Unit.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.vehicleHrefGet">
            <summary>Sets the shim of Unit.get_vehicleHref()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.vehicleHrefSetString">
            <summary>Sets the shim of Unit.set_vehicleHref(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.vinGet">
            <summary>Sets the shim of Unit.get_vin()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnit.vinSetString">
            <summary>Sets the shim of Unit.set_vin(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.#ctor(ManheimEventApi.Models.Units.UnitEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.bodyGet">
            <summary>Sets the shim of UnitEvent.get_body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.bodySetUnitEventBody">
            <summary>Sets the shim of UnitEvent.set_body(Body value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.eventTypeGet">
            <summary>Sets the shim of UnitEvent.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.eventTypeSetString">
            <summary>Sets the shim of UnitEvent.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.relatedResourcesGet">
            <summary>Sets the shim of UnitEvent.get_relatedResources()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.relatedResourcesSetListOfString">
            <summary>Sets the shim of UnitEvent.set_relatedResources(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.resourceGet">
            <summary>Sets the shim of UnitEvent.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.AllInstances.resourceSetString">
            <summary>Sets the shim of UnitEvent.set_resource(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.Constructor">
            <summary>Sets the shim of UnitEvent.UnitEvent()</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Account</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.#ctor(ManheimEventApi.Models.Units.UnitEvent.Account)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.AllInstances.hrefGet">
            <summary>Sets the shim of Account.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.AllInstances.hrefSetString">
            <summary>Sets the shim of Account.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.Constructor">
            <summary>Sets the shim of Account.Account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.hrefGet">
            <summary>Sets the shim of Account.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount.hrefSetString">
            <summary>Sets the shim of Account.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Account2</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.#ctor(ManheimEventApi.Models.Units.UnitEvent.Account2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.AllInstances.hrefGet">
            <summary>Sets the shim of Account2.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.AllInstances.hrefSetString">
            <summary>Sets the shim of Account2.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.Constructor">
            <summary>Sets the shim of Account2.Account2()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.hrefGet">
            <summary>Sets the shim of Account2.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimAccount2.hrefSetString">
            <summary>Sets the shim of Account2.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Body</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.#ctor(ManheimEventApi.Models.Units.UnitEvent.Body)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.accountGet">
            <summary>Sets the shim of Body.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.accountSetUnitEventAccount">
            <summary>Sets the shim of Body.set_account(Account value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.activeGet">
            <summary>Sets the shim of Body.get_active()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.activeSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_active(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.conditionGet">
            <summary>Sets the shim of Body.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.conditionReportsGet">
            <summary>Sets the shim of Body.get_conditionReports()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.conditionReportsSetListOfUnitEventConditionReport">
            <summary>Sets the shim of Body.set_conditionReports(List`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.conditionSetUnitEventCondition">
            <summary>Sets the shim of Body.set_condition(Condition value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.consignmentsGet">
            <summary>Sets the shim of Body.get_consignments()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.consignmentsSetUnitEventConsignments">
            <summary>Sets the shim of Body.set_consignments(Consignments value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.contactGet">
            <summary>Sets the shim of Body.get_contact()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.contactSetUnitEventContact">
            <summary>Sets the shim of Body.set_contact(Contact value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.createdOnGet">
            <summary>Sets the shim of Body.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.createdOnSetString">
            <summary>Sets the shim of Body.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.customerGet">
            <summary>Sets the shim of Body.get_customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.customerReferenceIDGet">
            <summary>Sets the shim of Body.get_customerReferenceID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.customerReferenceIDSetString">
            <summary>Sets the shim of Body.set_customerReferenceID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.customerSetUnitEventCustomer">
            <summary>Sets the shim of Body.set_customer(Customer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.descriptionGet">
            <summary>Sets the shim of Body.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.descriptionSetUnitEventDescription">
            <summary>Sets the shim of Body.set_description(Description value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.hrefGet">
            <summary>Sets the shim of Body.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.hrefSetString">
            <summary>Sets the shim of Body.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.imagesGet">
            <summary>Sets the shim of Body.get_images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.imagesSetListOfUnitEventImages">
            <summary>Sets the shim of Body.set_images(List`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.notesGet">
            <summary>Sets the shim of Body.get_notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.notesSetUnitEventNotes">
            <summary>Sets the shim of Body.set_notes(Notes value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.odometerGet">
            <summary>Sets the shim of Body.get_odometer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.odometerSetUnitEventOdometer">
            <summary>Sets the shim of Body.set_odometer(Odometer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.offeringsGet">
            <summary>Sets the shim of Body.get_offerings()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.offeringsSetUnitEventOfferings">
            <summary>Sets the shim of Body.set_offerings(Offerings value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.ordersGet">
            <summary>Sets the shim of Body.get_orders()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.ordersSetUnitEventOrders">
            <summary>Sets the shim of Body.set_orders(Orders value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.ownerGet">
            <summary>Sets the shim of Body.get_owner()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.ownerSetUnitEventOwner">
            <summary>Sets the shim of Body.set_owner(Owner value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.physicalLocationGet">
            <summary>Sets the shim of Body.get_physicalLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.physicalLocationSetUnitEventPhysicalLocation">
            <summary>Sets the shim of Body.set_physicalLocation(PhysicalLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.subscriptionsGet">
            <summary>Sets the shim of Body.get_subscriptions()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.subscriptionsSetUnitEventSubscriptions">
            <summary>Sets the shim of Body.set_subscriptions(Subscriptions value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.subtypeGet">
            <summary>Sets the shim of Body.get_subtype()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.subtypeSetString">
            <summary>Sets the shim of Body.set_subtype(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.titleGet">
            <summary>Sets the shim of Body.get_title()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.titleSetUnitEventTitle">
            <summary>Sets the shim of Body.set_title(Title value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.typeGet">
            <summary>Sets the shim of Body.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.typeSetString">
            <summary>Sets the shim of Body.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.updatedOnGet">
            <summary>Sets the shim of Body.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.updatedOnSetString">
            <summary>Sets the shim of Body.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.vehicleGet">
            <summary>Sets the shim of Body.get_vehicle()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.vehicleSetUnitEventVehicle">
            <summary>Sets the shim of Body.set_vehicle(Vehicle value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.vinGet">
            <summary>Sets the shim of Body.get_vin()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.AllInstances.vinSetString">
            <summary>Sets the shim of Body.set_vin(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.Constructor">
            <summary>Sets the shim of Body.Body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.accountGet">
            <summary>Sets the shim of Body.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.accountSetUnitEventAccount">
            <summary>Sets the shim of Body.set_account(Account value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.activeGet">
            <summary>Sets the shim of Body.get_active()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.activeSetNullableOfBoolean">
            <summary>Sets the shim of Body.set_active(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.conditionGet">
            <summary>Sets the shim of Body.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.conditionReportsGet">
            <summary>Sets the shim of Body.get_conditionReports()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.conditionReportsSetListOfUnitEventConditionReport">
            <summary>Sets the shim of Body.set_conditionReports(List`1&lt;ConditionReport&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.conditionSetUnitEventCondition">
            <summary>Sets the shim of Body.set_condition(Condition value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.consignmentsGet">
            <summary>Sets the shim of Body.get_consignments()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.consignmentsSetUnitEventConsignments">
            <summary>Sets the shim of Body.set_consignments(Consignments value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.contactGet">
            <summary>Sets the shim of Body.get_contact()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.contactSetUnitEventContact">
            <summary>Sets the shim of Body.set_contact(Contact value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.createdOnGet">
            <summary>Sets the shim of Body.get_createdOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.createdOnSetString">
            <summary>Sets the shim of Body.set_createdOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.customerGet">
            <summary>Sets the shim of Body.get_customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.customerReferenceIDGet">
            <summary>Sets the shim of Body.get_customerReferenceID()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.customerReferenceIDSetString">
            <summary>Sets the shim of Body.set_customerReferenceID(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.customerSetUnitEventCustomer">
            <summary>Sets the shim of Body.set_customer(Customer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.descriptionGet">
            <summary>Sets the shim of Body.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.descriptionSetUnitEventDescription">
            <summary>Sets the shim of Body.set_description(Description value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.hrefGet">
            <summary>Sets the shim of Body.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.hrefSetString">
            <summary>Sets the shim of Body.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.imagesGet">
            <summary>Sets the shim of Body.get_images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.imagesSetListOfUnitEventImages">
            <summary>Sets the shim of Body.set_images(List`1&lt;Images&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.notesGet">
            <summary>Sets the shim of Body.get_notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.notesSetUnitEventNotes">
            <summary>Sets the shim of Body.set_notes(Notes value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.odometerGet">
            <summary>Sets the shim of Body.get_odometer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.odometerSetUnitEventOdometer">
            <summary>Sets the shim of Body.set_odometer(Odometer value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.offeringsGet">
            <summary>Sets the shim of Body.get_offerings()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.offeringsSetUnitEventOfferings">
            <summary>Sets the shim of Body.set_offerings(Offerings value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.ordersGet">
            <summary>Sets the shim of Body.get_orders()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.ordersSetUnitEventOrders">
            <summary>Sets the shim of Body.set_orders(Orders value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.ownerGet">
            <summary>Sets the shim of Body.get_owner()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.ownerSetUnitEventOwner">
            <summary>Sets the shim of Body.set_owner(Owner value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.physicalLocationGet">
            <summary>Sets the shim of Body.get_physicalLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.physicalLocationSetUnitEventPhysicalLocation">
            <summary>Sets the shim of Body.set_physicalLocation(PhysicalLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.subscriptionsGet">
            <summary>Sets the shim of Body.get_subscriptions()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.subscriptionsSetUnitEventSubscriptions">
            <summary>Sets the shim of Body.set_subscriptions(Subscriptions value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.subtypeGet">
            <summary>Sets the shim of Body.get_subtype()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.subtypeSetString">
            <summary>Sets the shim of Body.set_subtype(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.titleGet">
            <summary>Sets the shim of Body.get_title()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.titleSetUnitEventTitle">
            <summary>Sets the shim of Body.set_title(Title value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.typeGet">
            <summary>Sets the shim of Body.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.typeSetString">
            <summary>Sets the shim of Body.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.updatedOnGet">
            <summary>Sets the shim of Body.get_updatedOn()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.updatedOnSetString">
            <summary>Sets the shim of Body.set_updatedOn(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.vehicleGet">
            <summary>Sets the shim of Body.get_vehicle()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.vehicleSetUnitEventVehicle">
            <summary>Sets the shim of Body.set_vehicle(Vehicle value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.vinGet">
            <summary>Sets the shim of Body.get_vin()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimBody.vinSetString">
            <summary>Sets the shim of Body.set_vin(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Company</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.#ctor(ManheimEventApi.Models.Units.UnitEvent.Company)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.AllInstances.hrefGet">
            <summary>Sets the shim of Company.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.AllInstances.hrefSetString">
            <summary>Sets the shim of Company.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.Constructor">
            <summary>Sets the shim of Company.Company()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.hrefGet">
            <summary>Sets the shim of Company.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCompany.hrefSetString">
            <summary>Sets the shim of Company.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Condition</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.#ctor(ManheimEventApi.Models.Units.UnitEvent.Condition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.AllInstances.frameDamageGet">
            <summary>Sets the shim of Condition.get_frameDamage()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.AllInstances.frameDamageSetNullableOfBoolean">
            <summary>Sets the shim of Condition.set_frameDamage(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.AllInstances.priorPaintGet">
            <summary>Sets the shim of Condition.get_priorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.AllInstances.priorPaintSetListOfUnitEventPriorPaint">
            <summary>Sets the shim of Condition.set_priorPaint(List`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.Constructor">
            <summary>Sets the shim of Condition.Condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.frameDamageGet">
            <summary>Sets the shim of Condition.get_frameDamage()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.frameDamageSetNullableOfBoolean">
            <summary>Sets the shim of Condition.set_frameDamage(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.priorPaintGet">
            <summary>Sets the shim of Condition.get_priorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCondition.priorPaintSetListOfUnitEventPriorPaint">
            <summary>Sets the shim of Condition.set_priorPaint(List`1&lt;PriorPaint&gt; value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+ConditionReport</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.#ctor(ManheimEventApi.Models.Units.UnitEvent.ConditionReport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.AllInstances.hrefGet">
            <summary>Sets the shim of ConditionReport.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.AllInstances.hrefSetString">
            <summary>Sets the shim of ConditionReport.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.AllInstances.sourceGet">
            <summary>Sets the shim of ConditionReport.get_source()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.AllInstances.sourceSetString">
            <summary>Sets the shim of ConditionReport.set_source(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.Constructor">
            <summary>Sets the shim of ConditionReport.ConditionReport()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.hrefGet">
            <summary>Sets the shim of ConditionReport.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.hrefSetString">
            <summary>Sets the shim of ConditionReport.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.sourceGet">
            <summary>Sets the shim of ConditionReport.get_source()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConditionReport.sourceSetString">
            <summary>Sets the shim of ConditionReport.set_source(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Consignments</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.#ctor(ManheimEventApi.Models.Units.UnitEvent.Consignments)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.AllInstances.hrefGet">
            <summary>Sets the shim of Consignments.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.AllInstances.hrefSetString">
            <summary>Sets the shim of Consignments.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.Constructor">
            <summary>Sets the shim of Consignments.Consignments()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.hrefGet">
            <summary>Sets the shim of Consignments.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimConsignments.hrefSetString">
            <summary>Sets the shim of Consignments.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Contact</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.#ctor(ManheimEventApi.Models.Units.UnitEvent.Contact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.accountIdGet">
            <summary>Sets the shim of Contact.get_accountId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.accountIdSetString">
            <summary>Sets the shim of Contact.set_accountId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.companyNameGet">
            <summary>Sets the shim of Contact.get_companyName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.companyNameSetString">
            <summary>Sets the shim of Contact.set_companyName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.contactNameGet">
            <summary>Sets the shim of Contact.get_contactName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.contactNameSetString">
            <summary>Sets the shim of Contact.set_contactName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.customerIdGet">
            <summary>Sets the shim of Contact.get_customerId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.customerIdSetString">
            <summary>Sets the shim of Contact.set_customerId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.emailGet">
            <summary>Sets the shim of Contact.get_email()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.emailSetString">
            <summary>Sets the shim of Contact.set_email(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.manheimAccountNumberGet">
            <summary>Sets the shim of Contact.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.manheimAccountNumberSetString">
            <summary>Sets the shim of Contact.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.phoneGet">
            <summary>Sets the shim of Contact.get_phone()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.AllInstances.phoneSetString">
            <summary>Sets the shim of Contact.set_phone(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.Constructor">
            <summary>Sets the shim of Contact.Contact()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.accountIdGet">
            <summary>Sets the shim of Contact.get_accountId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.accountIdSetString">
            <summary>Sets the shim of Contact.set_accountId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.companyNameGet">
            <summary>Sets the shim of Contact.get_companyName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.companyNameSetString">
            <summary>Sets the shim of Contact.set_companyName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.contactNameGet">
            <summary>Sets the shim of Contact.get_contactName()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.contactNameSetString">
            <summary>Sets the shim of Contact.set_contactName(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.customerIdGet">
            <summary>Sets the shim of Contact.get_customerId()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.customerIdSetString">
            <summary>Sets the shim of Contact.set_customerId(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.emailGet">
            <summary>Sets the shim of Contact.get_email()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.emailSetString">
            <summary>Sets the shim of Contact.set_email(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.manheimAccountNumberGet">
            <summary>Sets the shim of Contact.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.manheimAccountNumberSetString">
            <summary>Sets the shim of Contact.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.phoneGet">
            <summary>Sets the shim of Contact.get_phone()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimContact.phoneSetString">
            <summary>Sets the shim of Contact.set_phone(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Customer</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.#ctor(ManheimEventApi.Models.Units.UnitEvent.Customer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.AllInstances.hrefGet">
            <summary>Sets the shim of Customer.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.AllInstances.hrefSetString">
            <summary>Sets the shim of Customer.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.Constructor">
            <summary>Sets the shim of Customer.Customer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.hrefGet">
            <summary>Sets the shim of Customer.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimCustomer.hrefSetString">
            <summary>Sets the shim of Customer.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Description</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.#ctor(ManheimEventApi.Models.Units.UnitEvent.Description)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.audioGet">
            <summary>Sets the shim of Description.get_audio()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.audioSetListOfString">
            <summary>Sets the shim of Description.set_audio(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.doorCountGet">
            <summary>Sets the shim of Description.get_doorCount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.doorCountSetNullableOfInt32">
            <summary>Sets the shim of Description.set_doorCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.driveTypeGet">
            <summary>Sets the shim of Description.get_driveType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.driveTypeSetString">
            <summary>Sets the shim of Description.set_driveType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.engineGet">
            <summary>Sets the shim of Description.get_engine()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.engineSetUnitEventEngine">
            <summary>Sets the shim of Description.set_engine(Engine value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.exteriorColorGet">
            <summary>Sets the shim of Description.get_exteriorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.exteriorColorSetUnitEventExteriorColor">
            <summary>Sets the shim of Description.set_exteriorColor(ExteriorColor value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.interiorColorGet">
            <summary>Sets the shim of Description.get_interiorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.interiorColorSetUnitEventInteriorColor">
            <summary>Sets the shim of Description.set_interiorColor(InteriorColor value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.interiorTypeGet">
            <summary>Sets the shim of Description.get_interiorType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.interiorTypeSetString">
            <summary>Sets the shim of Description.set_interiorType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.makeGet">
            <summary>Sets the shim of Description.get_make()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.makeSetString">
            <summary>Sets the shim of Description.set_make(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.modelGet">
            <summary>Sets the shim of Description.get_model()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.modelSetString">
            <summary>Sets the shim of Description.set_model(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.modelYearGet">
            <summary>Sets the shim of Description.get_modelYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.modelYearSetNullableOfInt32">
            <summary>Sets the shim of Description.set_modelYear(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.optionsGet">
            <summary>Sets the shim of Description.get_options()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.optionsSetListOfString">
            <summary>Sets the shim of Description.set_options(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.roofTypeGet">
            <summary>Sets the shim of Description.get_roofType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.roofTypeSetString">
            <summary>Sets the shim of Description.set_roofType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.transmissionGet">
            <summary>Sets the shim of Description.get_transmission()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.transmissionSetString">
            <summary>Sets the shim of Description.set_transmission(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.trimGet">
            <summary>Sets the shim of Description.get_trim()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.AllInstances.trimSetString">
            <summary>Sets the shim of Description.set_trim(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.Constructor">
            <summary>Sets the shim of Description.Description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.audioGet">
            <summary>Sets the shim of Description.get_audio()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.audioSetListOfString">
            <summary>Sets the shim of Description.set_audio(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.doorCountGet">
            <summary>Sets the shim of Description.get_doorCount()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.doorCountSetNullableOfInt32">
            <summary>Sets the shim of Description.set_doorCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.driveTypeGet">
            <summary>Sets the shim of Description.get_driveType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.driveTypeSetString">
            <summary>Sets the shim of Description.set_driveType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.engineGet">
            <summary>Sets the shim of Description.get_engine()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.engineSetUnitEventEngine">
            <summary>Sets the shim of Description.set_engine(Engine value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.exteriorColorGet">
            <summary>Sets the shim of Description.get_exteriorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.exteriorColorSetUnitEventExteriorColor">
            <summary>Sets the shim of Description.set_exteriorColor(ExteriorColor value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.interiorColorGet">
            <summary>Sets the shim of Description.get_interiorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.interiorColorSetUnitEventInteriorColor">
            <summary>Sets the shim of Description.set_interiorColor(InteriorColor value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.interiorTypeGet">
            <summary>Sets the shim of Description.get_interiorType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.interiorTypeSetString">
            <summary>Sets the shim of Description.set_interiorType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.makeGet">
            <summary>Sets the shim of Description.get_make()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.makeSetString">
            <summary>Sets the shim of Description.set_make(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.modelGet">
            <summary>Sets the shim of Description.get_model()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.modelSetString">
            <summary>Sets the shim of Description.set_model(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.modelYearGet">
            <summary>Sets the shim of Description.get_modelYear()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.modelYearSetNullableOfInt32">
            <summary>Sets the shim of Description.set_modelYear(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.optionsGet">
            <summary>Sets the shim of Description.get_options()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.optionsSetListOfString">
            <summary>Sets the shim of Description.set_options(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.roofTypeGet">
            <summary>Sets the shim of Description.get_roofType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.roofTypeSetString">
            <summary>Sets the shim of Description.set_roofType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.transmissionGet">
            <summary>Sets the shim of Description.get_transmission()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.transmissionSetString">
            <summary>Sets the shim of Description.set_transmission(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.trimGet">
            <summary>Sets the shim of Description.get_trim()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimDescription.trimSetString">
            <summary>Sets the shim of Description.set_trim(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Engine</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.#ctor(ManheimEventApi.Models.Units.UnitEvent.Engine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.displacementGet">
            <summary>Sets the shim of Engine.get_displacement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.displacementSetNullableOfDouble">
            <summary>Sets the shim of Engine.set_displacement(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.fuelGet">
            <summary>Sets the shim of Engine.get_fuel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.fuelSetString">
            <summary>Sets the shim of Engine.set_fuel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.horsepowerGet">
            <summary>Sets the shim of Engine.get_horsepower()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.horsepowerSetNullableOfInt32">
            <summary>Sets the shim of Engine.set_horsepower(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.typeGet">
            <summary>Sets the shim of Engine.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.AllInstances.typeSetString">
            <summary>Sets the shim of Engine.set_type(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.Constructor">
            <summary>Sets the shim of Engine.Engine()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.displacementGet">
            <summary>Sets the shim of Engine.get_displacement()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.displacementSetNullableOfDouble">
            <summary>Sets the shim of Engine.set_displacement(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.fuelGet">
            <summary>Sets the shim of Engine.get_fuel()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.fuelSetString">
            <summary>Sets the shim of Engine.set_fuel(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.horsepowerGet">
            <summary>Sets the shim of Engine.get_horsepower()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.horsepowerSetNullableOfInt32">
            <summary>Sets the shim of Engine.set_horsepower(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.typeGet">
            <summary>Sets the shim of Engine.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimEngine.typeSetString">
            <summary>Sets the shim of Engine.set_type(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+ExteriorColor</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.#ctor(ManheimEventApi.Models.Units.UnitEvent.ExteriorColor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.AllInstances.codeGet">
            <summary>Sets the shim of ExteriorColor.get_code()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.AllInstances.codeSetString">
            <summary>Sets the shim of ExteriorColor.set_code(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.AllInstances.descriptionGet">
            <summary>Sets the shim of ExteriorColor.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.AllInstances.descriptionSetString">
            <summary>Sets the shim of ExteriorColor.set_description(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.Constructor">
            <summary>Sets the shim of ExteriorColor.ExteriorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.codeGet">
            <summary>Sets the shim of ExteriorColor.get_code()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.codeSetString">
            <summary>Sets the shim of ExteriorColor.set_code(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.descriptionGet">
            <summary>Sets the shim of ExteriorColor.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimExteriorColor.descriptionSetString">
            <summary>Sets the shim of ExteriorColor.set_description(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Images</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.#ctor(ManheimEventApi.Models.Units.UnitEvent.Images)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.AllInstances.hrefGet">
            <summary>Sets the shim of Images.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.AllInstances.hrefSetString">
            <summary>Sets the shim of Images.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.AllInstances.typeGet">
            <summary>Sets the shim of Images.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.AllInstances.typeSetString">
            <summary>Sets the shim of Images.set_type(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.Constructor">
            <summary>Sets the shim of Images.Images()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.hrefGet">
            <summary>Sets the shim of Images.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.hrefSetString">
            <summary>Sets the shim of Images.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.typeGet">
            <summary>Sets the shim of Images.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimImages.typeSetString">
            <summary>Sets the shim of Images.set_type(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+InteriorColor</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.#ctor(ManheimEventApi.Models.Units.UnitEvent.InteriorColor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.AllInstances.codeGet">
            <summary>Sets the shim of InteriorColor.get_code()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.AllInstances.codeSetString">
            <summary>Sets the shim of InteriorColor.set_code(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.AllInstances.descriptionGet">
            <summary>Sets the shim of InteriorColor.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.AllInstances.descriptionSetString">
            <summary>Sets the shim of InteriorColor.set_description(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.Constructor">
            <summary>Sets the shim of InteriorColor.InteriorColor()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.codeGet">
            <summary>Sets the shim of InteriorColor.get_code()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.codeSetString">
            <summary>Sets the shim of InteriorColor.set_code(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.descriptionGet">
            <summary>Sets the shim of InteriorColor.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimInteriorColor.descriptionSetString">
            <summary>Sets the shim of InteriorColor.set_description(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Notes</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.#ctor(ManheimEventApi.Models.Units.UnitEvent.Notes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.AllInstances.hrefGet">
            <summary>Sets the shim of Notes.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.AllInstances.hrefSetString">
            <summary>Sets the shim of Notes.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.Constructor">
            <summary>Sets the shim of Notes.Notes()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.hrefGet">
            <summary>Sets the shim of Notes.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimNotes.hrefSetString">
            <summary>Sets the shim of Notes.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Odometer</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.#ctor(ManheimEventApi.Models.Units.UnitEvent.Odometer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.digitsGet">
            <summary>Sets the shim of Odometer.get_digits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.digitsSetNullableOfInt32">
            <summary>Sets the shim of Odometer.set_digits(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.readingGet">
            <summary>Sets the shim of Odometer.get_reading()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.readingSetNullableOfInt32">
            <summary>Sets the shim of Odometer.set_reading(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.typeGet">
            <summary>Sets the shim of Odometer.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.typeSetString">
            <summary>Sets the shim of Odometer.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.unitsGet">
            <summary>Sets the shim of Odometer.get_units()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.AllInstances.unitsSetString">
            <summary>Sets the shim of Odometer.set_units(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.Constructor">
            <summary>Sets the shim of Odometer.Odometer()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.digitsGet">
            <summary>Sets the shim of Odometer.get_digits()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.digitsSetNullableOfInt32">
            <summary>Sets the shim of Odometer.set_digits(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.readingGet">
            <summary>Sets the shim of Odometer.get_reading()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.readingSetNullableOfInt32">
            <summary>Sets the shim of Odometer.set_reading(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.typeGet">
            <summary>Sets the shim of Odometer.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.typeSetString">
            <summary>Sets the shim of Odometer.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.unitsGet">
            <summary>Sets the shim of Odometer.get_units()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOdometer.unitsSetString">
            <summary>Sets the shim of Odometer.set_units(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Offerings</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.#ctor(ManheimEventApi.Models.Units.UnitEvent.Offerings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.AllInstances.hrefGet">
            <summary>Sets the shim of Offerings.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.AllInstances.hrefSetString">
            <summary>Sets the shim of Offerings.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.Constructor">
            <summary>Sets the shim of Offerings.Offerings()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.hrefGet">
            <summary>Sets the shim of Offerings.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOfferings.hrefSetString">
            <summary>Sets the shim of Offerings.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+OperatingLocation</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.#ctor(ManheimEventApi.Models.Units.UnitEvent.OperatingLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.AllInstances.hrefGet">
            <summary>Sets the shim of OperatingLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.AllInstances.hrefSetString">
            <summary>Sets the shim of OperatingLocation.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.Constructor">
            <summary>Sets the shim of OperatingLocation.OperatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.hrefGet">
            <summary>Sets the shim of OperatingLocation.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOperatingLocation.hrefSetString">
            <summary>Sets the shim of OperatingLocation.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Orders</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.#ctor(ManheimEventApi.Models.Units.UnitEvent.Orders)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.AllInstances.hrefGet">
            <summary>Sets the shim of Orders.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.AllInstances.hrefSetString">
            <summary>Sets the shim of Orders.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.Constructor">
            <summary>Sets the shim of Orders.Orders()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.hrefGet">
            <summary>Sets the shim of Orders.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOrders.hrefSetString">
            <summary>Sets the shim of Orders.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Owner</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.#ctor(ManheimEventApi.Models.Units.UnitEvent.Owner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.accountGet">
            <summary>Sets the shim of Owner.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.accountSetUnitEventAccount2">
            <summary>Sets the shim of Owner.set_account(Account2 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.companyGet">
            <summary>Sets the shim of Owner.get_company()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.companySetUnitEventCompany">
            <summary>Sets the shim of Owner.set_company(Company value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.manheimAccountNumberGet">
            <summary>Sets the shim of Owner.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.AllInstances.manheimAccountNumberSetString">
            <summary>Sets the shim of Owner.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.Constructor">
            <summary>Sets the shim of Owner.Owner()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.accountGet">
            <summary>Sets the shim of Owner.get_account()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.accountSetUnitEventAccount2">
            <summary>Sets the shim of Owner.set_account(Account2 value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.companyGet">
            <summary>Sets the shim of Owner.get_company()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.companySetUnitEventCompany">
            <summary>Sets the shim of Owner.set_company(Company value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.manheimAccountNumberGet">
            <summary>Sets the shim of Owner.get_manheimAccountNumber()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimOwner.manheimAccountNumberSetString">
            <summary>Sets the shim of Owner.set_manheimAccountNumber(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+PhysicalLocation</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.#ctor(ManheimEventApi.Models.Units.UnitEvent.PhysicalLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.addressGet">
            <summary>Sets the shim of PhysicalLocation.get_address()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.addressSetString">
            <summary>Sets the shim of PhysicalLocation.set_address(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.cityGet">
            <summary>Sets the shim of PhysicalLocation.get_city()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.citySetString">
            <summary>Sets the shim of PhysicalLocation.set_city(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.operatingLocationGet">
            <summary>Sets the shim of PhysicalLocation.get_operatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.operatingLocationSetUnitEventOperatingLocation">
            <summary>Sets the shim of PhysicalLocation.set_operatingLocation(OperatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.stateGet">
            <summary>Sets the shim of PhysicalLocation.get_state()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.stateSetString">
            <summary>Sets the shim of PhysicalLocation.set_state(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.typeGet">
            <summary>Sets the shim of PhysicalLocation.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.typeSetString">
            <summary>Sets the shim of PhysicalLocation.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.zipGet">
            <summary>Sets the shim of PhysicalLocation.get_zip()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.AllInstances.zipSetString">
            <summary>Sets the shim of PhysicalLocation.set_zip(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.Constructor">
            <summary>Sets the shim of PhysicalLocation.PhysicalLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.addressGet">
            <summary>Sets the shim of PhysicalLocation.get_address()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.addressSetString">
            <summary>Sets the shim of PhysicalLocation.set_address(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.cityGet">
            <summary>Sets the shim of PhysicalLocation.get_city()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.citySetString">
            <summary>Sets the shim of PhysicalLocation.set_city(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.operatingLocationGet">
            <summary>Sets the shim of PhysicalLocation.get_operatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.operatingLocationSetUnitEventOperatingLocation">
            <summary>Sets the shim of PhysicalLocation.set_operatingLocation(OperatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.stateGet">
            <summary>Sets the shim of PhysicalLocation.get_state()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.stateSetString">
            <summary>Sets the shim of PhysicalLocation.set_state(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.typeGet">
            <summary>Sets the shim of PhysicalLocation.get_type()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.typeSetString">
            <summary>Sets the shim of PhysicalLocation.set_type(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.zipGet">
            <summary>Sets the shim of PhysicalLocation.get_zip()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPhysicalLocation.zipSetString">
            <summary>Sets the shim of PhysicalLocation.set_zip(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+PriorPaint</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.#ctor(ManheimEventApi.Models.Units.UnitEvent.PriorPaint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.AllInstances.conditionGet">
            <summary>Sets the shim of PriorPaint.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.AllInstances.conditionSetString">
            <summary>Sets the shim of PriorPaint.set_condition(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.AllInstances.descriptionGet">
            <summary>Sets the shim of PriorPaint.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.AllInstances.descriptionSetString">
            <summary>Sets the shim of PriorPaint.set_description(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.Constructor">
            <summary>Sets the shim of PriorPaint.PriorPaint()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.conditionGet">
            <summary>Sets the shim of PriorPaint.get_condition()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.conditionSetString">
            <summary>Sets the shim of PriorPaint.set_condition(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.descriptionGet">
            <summary>Sets the shim of PriorPaint.get_description()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimPriorPaint.descriptionSetString">
            <summary>Sets the shim of PriorPaint.set_description(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Subscriptions</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.#ctor(ManheimEventApi.Models.Units.UnitEvent.Subscriptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.AllInstances.hrefGet">
            <summary>Sets the shim of Subscriptions.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.AllInstances.hrefSetString">
            <summary>Sets the shim of Subscriptions.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.Constructor">
            <summary>Sets the shim of Subscriptions.Subscriptions()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.hrefGet">
            <summary>Sets the shim of Subscriptions.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimSubscriptions.hrefSetString">
            <summary>Sets the shim of Subscriptions.set_href(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Title</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.#ctor(ManheimEventApi.Models.Units.UnitEvent.Title)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.brandingGet">
            <summary>Sets the shim of Title.get_branding()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.brandingSetString">
            <summary>Sets the shim of Title.set_branding(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.locationGet">
            <summary>Sets the shim of Title.get_location()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.locationSetString">
            <summary>Sets the shim of Title.set_location(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.numberGet">
            <summary>Sets the shim of Title.get_number()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.numberSetNullableOfInt32">
            <summary>Sets the shim of Title.set_number(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.operatingLocationGet">
            <summary>Sets the shim of Title.get_operatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.operatingLocationSetUnitEventOperatingLocation">
            <summary>Sets the shim of Title.set_operatingLocation(OperatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.problemGet">
            <summary>Sets the shim of Title.get_problem()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.problemSetString">
            <summary>Sets the shim of Title.set_problem(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.stateGet">
            <summary>Sets the shim of Title.get_state()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.AllInstances.stateSetString">
            <summary>Sets the shim of Title.set_state(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.Constructor">
            <summary>Sets the shim of Title.Title()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.brandingGet">
            <summary>Sets the shim of Title.get_branding()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.brandingSetString">
            <summary>Sets the shim of Title.set_branding(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.locationGet">
            <summary>Sets the shim of Title.get_location()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.locationSetString">
            <summary>Sets the shim of Title.set_location(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.numberGet">
            <summary>Sets the shim of Title.get_number()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.numberSetNullableOfInt32">
            <summary>Sets the shim of Title.set_number(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.operatingLocationGet">
            <summary>Sets the shim of Title.get_operatingLocation()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.operatingLocationSetUnitEventOperatingLocation">
            <summary>Sets the shim of Title.set_operatingLocation(OperatingLocation value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.problemGet">
            <summary>Sets the shim of Title.get_problem()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.problemSetString">
            <summary>Sets the shim of Title.set_problem(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.stateGet">
            <summary>Sets the shim of Title.get_state()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimTitle.stateSetString">
            <summary>Sets the shim of Title.set_state(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle">
            <summary>Shim type of ManheimEventApi.Models.Units.UnitEvent+Vehicle</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.#ctor(ManheimEventApi.Models.Units.UnitEvent.Vehicle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.AllInstances.hrefGet">
            <summary>Sets the shim of Vehicle.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.AllInstances.hrefSetString">
            <summary>Sets the shim of Vehicle.set_href(String value)</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.Constructor">
            <summary>Sets the shim of Vehicle.Vehicle()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.hrefGet">
            <summary>Sets the shim of Vehicle.get_href()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.ShimVehicle.hrefSetString">
            <summary>Sets the shim of Vehicle.set_href(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.bodyGet">
            <summary>Sets the shim of UnitEvent.get_body()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.bodySetUnitEventBody">
            <summary>Sets the shim of UnitEvent.set_body(Body value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.eventTypeGet">
            <summary>Sets the shim of UnitEvent.get_eventType()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.eventTypeSetString">
            <summary>Sets the shim of UnitEvent.set_eventType(String value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.relatedResourcesGet">
            <summary>Sets the shim of UnitEvent.get_relatedResources()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.relatedResourcesSetListOfString">
            <summary>Sets the shim of UnitEvent.set_relatedResources(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.resourceGet">
            <summary>Sets the shim of UnitEvent.get_resource()</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.ShimUnitEvent.resourceSetString">
            <summary>Sets the shim of UnitEvent.set_resource(String value)</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubAudio">
            <summary>Stub type of ManheimEventApi.Models.Units.Audio</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubAudio.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubAudio.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubAudio.InitializeStub">
            <summary>Initializes a new instance of type StubAudio</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubAudio.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubAudio.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubConditionReport">
            <summary>Stub type of ManheimEventApi.Models.Units.ConditionReport</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubConditionReport.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubConditionReport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubConditionReport.InitializeStub">
            <summary>Initializes a new instance of type StubConditionReport</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubConditionReport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubConditionReport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubImages">
            <summary>Stub type of ManheimEventApi.Models.Units.Images</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubImages.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubImages.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubImages.InitializeStub">
            <summary>Initializes a new instance of type StubImages</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubImages.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubImages.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubOptions">
            <summary>Stub type of ManheimEventApi.Models.Units.Options</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubOptions.InitializeStub">
            <summary>Initializes a new instance of type StubOptions</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubPriorPaint">
            <summary>Stub type of ManheimEventApi.Models.Units.PriorPaint</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubPriorPaint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubPriorPaint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubPriorPaint.InitializeStub">
            <summary>Initializes a new instance of type StubPriorPaint</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubPriorPaint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubPriorPaint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubUnit">
            <summary>Stub type of ManheimEventApi.Models.Units.Unit</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubUnit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubUnit.InitializeStub">
            <summary>Initializes a new instance of type StubUnit</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnit.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Models.Units.Fakes.StubUnitEvent">
            <summary>Stub type of ManheimEventApi.Models.Units.UnitEvent</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubUnitEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnitEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Models.Units.Fakes.StubUnitEvent.InitializeStub">
            <summary>Initializes a new instance of type StubUnitEvent</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnitEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Models.Units.Fakes.StubUnitEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor">
            <summary>Shim type of ManheimEventApi.Processors.AuctionProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.#ctor(ManheimEventApi.Processors.AuctionProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.AllInstances.ProcessOfferingOfferingEvent">
            <summary>Sets the shim of AuctionProcessor.ProcessOffering(OfferingEvent newEvent)</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.Bind(ManheimEventApi.Processors.IAuctionProcessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.ConstructorITransformHelperIUnitOfWork">
            <summary>Sets the shim of AuctionProcessor.AuctionProcessor(ITransformHelper transformHelper, IUnitOfWork unitOfWork)</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimAuctionProcessor.ProcessOfferingOfferingEvent">
            <summary>Sets the shim of AuctionProcessor.ProcessOffering(OfferingEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor">
            <summary>Shim type of ManheimEventApi.Processors.InventoryProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.#ctor(ManheimEventApi.Processors.InventoryProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.AllInstances.ProcessUnitUnitEvent">
            <summary>Sets the shim of InventoryProcessor.ProcessUnit(UnitEvent newEvent)</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.Bind(ManheimEventApi.Processors.IInventoryProcessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.ConstructorITransformHelperIUnitOfWork">
            <summary>Sets the shim of InventoryProcessor.InventoryProcessor(ITransformHelper transformHelper, IUnitOfWork unitOfWork)</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.ShimInventoryProcessor.ProcessUnitUnitEvent">
            <summary>Sets the shim of InventoryProcessor.ProcessUnit(UnitEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.StubAuctionProcessor">
            <summary>Stub type of ManheimEventApi.Processors.AuctionProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubAuctionProcessor.#ctor(ManheimEventApi.Utilities.ITransformHelper,ManheimEventApi.DataAccess.IUnitOfWork)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubAuctionProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubAuctionProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubAuctionProcessor</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubAuctionProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubAuctionProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.StubIAuctionProcessor">
            <summary>Stub type of ManheimEventApi.Processors.IAuctionProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubIAuctionProcessor.#ctor">
            <summary>Initializes a new instance of type StubIAuctionProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubIAuctionProcessor.ManheimEventApi#Processors#IAuctionProcessor#ProcessOffering(ManheimEventApi.Models.Offerings.OfferingEvent)">
            <summary>Sets the stub of IAuctionProcessor.ProcessOffering(OfferingEvent newEvent)</summary>
        </member>
        <member name="F:ManheimEventApi.Processors.Fakes.StubIAuctionProcessor.ProcessOfferingOfferingEvent">
            <summary>Sets the stub of IAuctionProcessor.ProcessOffering(OfferingEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.StubIInventoryProcessor">
            <summary>Stub type of ManheimEventApi.Processors.IInventoryProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubIInventoryProcessor.#ctor">
            <summary>Initializes a new instance of type StubIInventoryProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubIInventoryProcessor.ManheimEventApi#Processors#IInventoryProcessor#ProcessUnit(ManheimEventApi.Models.Units.UnitEvent)">
            <summary>Sets the stub of IInventoryProcessor.ProcessUnit(UnitEvent newEvent)</summary>
        </member>
        <member name="F:ManheimEventApi.Processors.Fakes.StubIInventoryProcessor.ProcessUnitUnitEvent">
            <summary>Sets the stub of IInventoryProcessor.ProcessUnit(UnitEvent newEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Processors.Fakes.StubInventoryProcessor">
            <summary>Stub type of ManheimEventApi.Processors.InventoryProcessor</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubInventoryProcessor.#ctor(ManheimEventApi.Utilities.ITransformHelper,ManheimEventApi.DataAccess.IUnitOfWork)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubInventoryProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Processors.Fakes.StubInventoryProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubInventoryProcessor</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubInventoryProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Processors.Fakes.StubInventoryProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility">
            <summary>Shim type of ManheimEventApi.Utilities.ConfigurationUtility</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.#ctor(ManheimEventApi.Utilities.ConfigurationUtility)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.AllInstances.ApiKeyGet">
            <summary>Sets the shim of ConfigurationUtility.get_ApiKey()</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.AllInstances.DBConnectionStringGet">
            <summary>Sets the shim of ConfigurationUtility.get_DBConnectionString()</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.ApiKeyGet">
            <summary>Sets the shim of ConfigurationUtility.get_ApiKey()</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.Bind(ManheimEventApi.Utilities.IConfigurationUtility)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.Constructor">
            <summary>Sets the shim of ConfigurationUtility.ConfigurationUtility()</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimConfigurationUtility.DBConnectionStringGet">
            <summary>Sets the shim of ConfigurationUtility.get_DBConnectionString()</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension">
            <summary>Shim type of ManheimEventApi.Utilities.EventTypeExtension</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimEventTypeExtension.CanProcessString">
            <summary>Sets the shim of EventTypeExtension.CanProcess(String eventType)</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.ShimTransformHelper">
            <summary>Shim type of ManheimEventApi.Utilities.TransformHelper</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.#ctor(ManheimEventApi.Utilities.TransformHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.AllInstances.GetOfferingKeyOfferingEvent">
            <summary>Sets the shim of TransformHelper.GetOfferingKey(OfferingEvent offering)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.AllInstances.GetUnitListsUnitEvent">
            <summary>Sets the shim of TransformHelper.GetUnitLists(UnitEvent unitEvent)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.AllInstances.TransformOfferingEvent">
            <summary>Sets the shim of TransformHelper.Transform(OfferingEvent offering)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.AllInstances.TransformUnitEvent">
            <summary>Sets the shim of TransformHelper.Transform(UnitEvent unitEvent)</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.Bind(ManheimEventApi.Utilities.ITransformHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.Constructor">
            <summary>Sets the shim of TransformHelper.TransformHelper()</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.GetOfferingKeyOfferingEvent">
            <summary>Sets the shim of TransformHelper.GetOfferingKey(OfferingEvent offering)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.GetUnitListsUnitEvent">
            <summary>Sets the shim of TransformHelper.GetUnitLists(UnitEvent unitEvent)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.TransformOfferingEvent">
            <summary>Sets the shim of TransformHelper.Transform(OfferingEvent offering)</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.ShimTransformHelper.TransformUnitEvent">
            <summary>Sets the shim of TransformHelper.Transform(UnitEvent unitEvent)</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility">
            <summary>Stub type of ManheimEventApi.Utilities.ConfigurationUtility</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationUtility</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubConfigurationUtility.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility">
            <summary>Stub type of ManheimEventApi.Utilities.IConfigurationUtility</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility.#ctor">
            <summary>Initializes a new instance of type StubIConfigurationUtility</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility.ManheimEventApi#Utilities#IConfigurationUtility#ApiKey">
            <summary>Sets the stub of IConfigurationUtility.get_ApiKey()</summary>
        </member>
        <member name="F:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility.ApiKeyGet">
            <summary>Sets the stub of IConfigurationUtility.get_ApiKey()</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility.ManheimEventApi#Utilities#IConfigurationUtility#DBConnectionString">
            <summary>Sets the stub of IConfigurationUtility.get_DBConnectionString()</summary>
        </member>
        <member name="F:ManheimEventApi.Utilities.Fakes.StubIConfigurationUtility.DBConnectionStringGet">
            <summary>Sets the stub of IConfigurationUtility.get_DBConnectionString()</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.StubITransformHelper">
            <summary>Stub type of ManheimEventApi.Utilities.ITransformHelper</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubITransformHelper.#ctor">
            <summary>Initializes a new instance of type StubITransformHelper</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubITransformHelper.ManheimEventApi#Utilities#ITransformHelper#Transform(ManheimEventApi.Models.Offerings.OfferingEvent)">
            <summary>Sets the stub of ITransformHelper.Transform(OfferingEvent offering)</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubITransformHelper.ManheimEventApi#Utilities#ITransformHelper#Transform(ManheimEventApi.Models.Units.UnitEvent)">
            <summary>Sets the stub of ITransformHelper.Transform(UnitEvent unit)</summary>
        </member>
        <member name="F:ManheimEventApi.Utilities.Fakes.StubITransformHelper.TransformOfferingEvent">
            <summary>Sets the stub of ITransformHelper.Transform(OfferingEvent offering)</summary>
        </member>
        <member name="F:ManheimEventApi.Utilities.Fakes.StubITransformHelper.TransformUnitEvent">
            <summary>Sets the stub of ITransformHelper.Transform(UnitEvent unit)</summary>
        </member>
        <member name="T:ManheimEventApi.Utilities.Fakes.StubTransformHelper">
            <summary>Stub type of ManheimEventApi.Utilities.TransformHelper</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubTransformHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubTransformHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ManheimEventApi.Utilities.Fakes.StubTransformHelper.InitializeStub">
            <summary>Initializes a new instance of type StubTransformHelper</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubTransformHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ManheimEventApi.Utilities.Fakes.StubTransformHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
